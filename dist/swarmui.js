/*! SwarmUI - v0.2.0 - 2016-04-26
 * https://github.com/Ptimagos/swarmui
 * Copyright (c) 2016 David Lepoultier;
 * Licensed MIT
 */
function ImageViewModel(a){this.Id=a.Id,this.Tag=a.Tag,this.Repository=a.Repository,this.Created=a.Created,this.Checked=!1,this.RepoTags=a.RepoTags,this.VirtualSize=a.VirtualSize}function ContainerViewModel(a){this.Id=a.Id,this.Image=a.Image,this.Command=a.Command,this.Created=a.Created,this.SizeRw=a.SizeRw,this.Status=a.Status,this.Checked=!1,this.Names=a.Names}function SwarmViewModel(a){this.nodename=a.nodename,this.version=a.version,this.health=a.health,this.url=a.url,this.Checked=!1}function SwarmHostViewModel(a){this.nodename=a.nodename,this.version=a.version,this.health=a.health,this.url=a.url,this.contRunning=a.containersRunning,this.contStopped=a.containersStopped,this.contGhost=a.containersGhost}function ContainersUpdateModel(a){this.id=a.Id,this.image=a.Image,this.status=a.Status}function ConsulTasksModel(a){this.nodeName=a.nodeName,this.containerID=a.containerID,this.action=a.action,this.stat=a.stat,this.describe=a.describe,this.progress=a.progress,this.startDate=a.startDate,this.endDate=a.endDate,this.logs=a.logs}angular.module("swarmui",["swarmui.templates","ngRoute","ui.bootstrap","swarmui.services","swarmui.filters","masthead","dashboard","dashboardContainers","dashboardImages","container","image","imagesActions","startContainer","containersActions","pullImage","hosts","hostsInforamtion","wrapperHosts","wrapperDashboard"]).config(["$routeProvider",function(a){"use strict";a.when("/",{templateUrl:"app/components/dashboard/dashboard.html",controller:"DashboardController"}),a.when("/:from/images/",{templateUrl:"app/components/dashboardImages/dashboardImages.html",controller:"DashboardImagesController"}),a.when("/:from/images/:id/",{templateUrl:"app/components/image/image.html",controller:"ImageController"}),a.when("/:from/:node/images/:id/",{templateUrl:"app/components/image/image.html",controller:"ImageController"}),a.when("/dashboard/containers/",{templateUrl:"app/components/dashboardContainers/dashboardContainers.html",controller:"DashboardContainersController"}),a.when("/:from/:node/containers/:id/",{templateUrl:"app/components/container/container.html",controller:"ContainerController"}),a.when("/:from/:node/containers/:id/stats",{templateUrl:"app/components/stats/stats.html",controller:"StatsController"}),a.when("/:from/:node/containers/:id/logs/",{templateUrl:"app/components/containerLogs/containerlogs.html",controller:"ContainerLogsController"}),a.when("/:from/:node/containers/:id/top",{templateUrl:"app/components/containerTop/containerTop.html",controller:"ContainerTopController"}),a.when("/:from/:node/containers/:id/stats",{templateUrl:"app/components/stats/stats.html",controller:"StatsController"}),a.when("/:from/:node/containers/:containerId/image/:id/",{templateUrl:"app/components/image/image.html",controller:"ImageController"}),a.when("/hosts/",{templateUrl:"app/components/hosts/hosts.html",controller:"HostsController"}),a.when("/hosts/:node/",{templateUrl:"app/components/hostInformations/hostInformation.html",controller:"HostsInformationController"}),a.otherwise({redirectTo:"/"})}]).constant("CONSUL_ENDPOINT","consulapi").constant("DOCKER_ENDPOINT","swarmuiapi").constant("DOCKERREPO_ENDPOINT","swarmuiapirepo").constant("DOCKER_PORT","").constant("UI_VERSION","0.2.0"),angular.module("container",[]).controller("ContainerController",["ConsulPrimarySwarm","Settings","$scope","Messages","$timeout","Container","$routeParams","ViewSpinner","humansizeFilter","$sce","$location","Swarm","ContainerLogs",function(a,b,c,d,e,f,g,h,i,j,k,l,m){function n(){f.stats({id:g.id,node:c.primaryUrl},function(a){var b=Object.keys(a).map(function(b){return a[b]});return-1!==b.join("").indexOf("no such id")?void d.error("Unable to retrieve stats","Is this container running?"):(c.data=a,o(a),p(a),q(a),void(K=e(n,5e3)))},function(){d.error("Unable to retrieve stats","Is this container running?"),K=e(n,5e3)})}function o(a){H.addData([r(a)],""),H.removeData()}function p(a){I.addData([a.memory_stats.usage],""),I.removeData()}function q(a){a.networks&&(c.networkName=Object.keys(a.networks)[0],a.network=a.networks[c.networkName]);var b=0,d=0;(0!==L||0!==M)&&(b=a.network.rx_bytes-L,d=a.network.tx_bytes-M),L=a.network.rx_bytes,M=a.network.tx_bytes,J.addData([b,d],""),J.removeData()}function r(a){var b=a.precpu_stats,c=a.cpu_stats,d=0,e=c.cpu_usage.total_usage-b.cpu_usage.total_usage,f=c.system_cpu_usage-b.system_cpu_usage;return f>0&&e>0&&(d=e/f*c.cpu_usage.percpu_usage.length*100),d}switch(c.primaryUrl="",c.changes=[],c.dashOn=!1,c.hostOn=!1,c.edit=!1,c.stdout="",c.stderr="",c.showTimestamps=!1,c.tailLines=200,c.logIntervalId="",c.ps_args="",g.from){case"dashboard":c.fromTo="/"+g.from+"/containers/",c.returnTo="to containers list",c.dashboard="3",c.dashOn=!0;break;case"hosts":c.fromTo="/"+g.from+"/"+g.node+"/",c.returnTo="to "+g.node,c.dashboard="1",c.hostOn=!0;break;default:c.from="/",c.returnTo=""}c.from="/"+g.from+"/containers/";var s=function(){h.spin(),a.get({},function(a){var b=atob(a[0].Value);c.primarySwarm=b,f.get({id:g.id,node:c.primarySwarm},function(a){c.container=a,c.container.edit=!1,c.container.Node=g.node,c.container.From=g.from,c.container.newContainerName=a.Name,h.stop()},function(a){404===a.status?($(".detail").hide(),d.error("Not found","Container not found.")):d.error("Failure",a.data),h.stop()})})};c.getTop=function(){c.destroyInterval(),f.top({id:g.id,node:c.primarySwarm,ps_args:c.ps_args},function(a){c.containerTop=a})};var t=function(){m.get(g.id,c.primarySwarm,{stdout:1,stderr:0,timestamps:c.showTimestamps,tail:c.tailLines},function(a,b,d,e){a=a.replace(/[\r]/g,"\n"),a=a.substring(8),a=a.replace(/\n(.{8})/g,"\n"),c.stdout=a}),m.get(g.id,c.primarySwarm,{stdout:0,stderr:1,timestamps:c.showTimestamps,tail:c.tailLines},function(a,b,d,e){a=a.replace(/[\r]/g,"\n"),a=a.substring(8),a=a.replace(/\n(.{8})/g,"\n"),c.stderr=a})};c.getLogs=function(){t(),c.logIntervalId=window.setInterval(t,5e3)},c.destroyInterval=function(){clearInterval(c.logIntervalId)},c.$on("$destroy",function(){clearInterval(c.logIntervalId)}),c.getChanges=function(){h.spin(),a.get({},function(a){var b=atob(a[0].Value);l.info({node:b},function(a){for(var b="",d=4;d<a.SystemStatus.length;d+=8){var e=a.SystemStatus[d][0].split(" ");if(e[1]===g.node){b=a.SystemStatus[d][1];break}}f.changes({id:g.id,node:b},function(a){c.changes=a,h.stop()})})})},c.start=function(){h.spin(),f.actionCont({id:c.container.Id,node:c.primarySwarm,HostConfig:c.container.HostConfig,action:"start"},function(a){e(n,1e3),s(),d.send("Container started",g.id)},function(a){s(),d.error("Failure","Container failed to start."+a.data)})},c.stop=function(){h.spin(),f.actionCont({id:g.id,node:c.primarySwarm,action:"stop"},function(a){s(),d.send("Container stopped",g.id)},function(a){s(),d.error("Failure","Container failed to stop."+a.data)})},c.kill=function(){h.spin(),f.actionCont({id:g.id,node:c.primarySwarm,action:"kill"},function(a){s(),d.send("Container killed",g.id)},function(a){s(),d.error("Failure","Container failed to die."+a.data)})},c.commit=function(){h.spin(),ContainerCommit.commit({id:g.id,repo:c.container.Config.Image,node:c.primarySwarm},function(a){s(),d.send("Container commited",g.id)},function(a){s(),d.error("Failure","Container failed to commit."+a.data)})},c.pause=function(){h.spin(),f.actionCont({id:g.id,node:c.primarySwarm,action:"pause"},function(a){s(),d.send("Container paused",g.id)},function(a){s(),d.error("Failure","Container failed to pause."+a.data)})},c.unpause=function(){h.spin(),f.actionCont({id:g.id,node:c.primarySwarm,action:"unpause"},function(a){s(),d.send("Container unpaused",g.id)},function(a){s(),d.error("Failure","Container failed to unpause."+a.data)})},c.remove=function(){console.log(c.from),h.spin(),f.remove({id:g.id,node:c.primarySwarm},function(a){s(),k.path(c.from),d.send("Container removed",g.id)},function(a){s(),d.error("Failure","Container failed to remove."+a.data)})},c.restart=function(){h.spin(),f.actionCont({id:g.id,node:c.primarySwarm,action:"restart"},function(a){s(),d.send("Container restarted",g.id)},function(a){s(),d.error("Failure","Container failed to restart."+a.data)})},c.hasContent=function(a){return null!==a&&void 0!==a},c.renameContainer=function(){f.rename({id:g.id,name:c.container.newContainerName,node:c.primarySwarm},function(a){a.name?(c.container.Name=a.name,d.send("Container renamed",g.id)):(c.container.newContainerName=c.container.Name,d.error("Failure","Container failed to rename."))}),c.container.edit=!1};for(var u=[],v=[],w=[],x=[],y=[],z=[],A=[],B=0;60>B;B++)u.push(""),v.push(0),w.push(""),x.push(0),y.push(""),z.push(0),A.push(0);var C={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:v},D={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:x},E={label:"Rx Bytes",fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:A},F={label:"Tx Bytes",fillColor:"rgba(255,180,174,0.5)",strokeColor:"rgba(255,180,174,1)",pointStrokeColor:"#fff",data:z},G=[{color:"rgba(151,187,205,0.5)",title:"Tx Data"},{color:"rgba(255,180,174,0.5)",title:"Rx Data"}];legend($("#network-legend").get(0),G),Chart.defaults.global.animationSteps=60;var H=new Chart($("#cpu-stats-chart").get(0).getContext("2d")).Line({labels:u,datasets:[C]},{pointDot:!1,responsive:!0}),I=new Chart($("#memory-stats-chart").get(0).getContext("2d")).Line({labels:w,datasets:[D]},{scaleLabel:function(a){return i(parseInt(a.value,10))},pointDot:!1,responsive:!0}),J=new Chart($("#network-stats-chart").get(0).getContext("2d")).Line({labels:y,datasets:[E,F]},{scaleLabel:function(a){return i(parseInt(a.value,10))},pointDot:!1,responsive:!0});c.networkLegend=j.trustAsHtml(J.generateLegend()),c.getPrimary=function(){a.get({},function(a){var b=atob(a[0].Value);c.primaryUrl=b})},c.getPrimary();var K;c.$on("$destroy",function(){e.cancel(K)}),e(n,1e3);var L=0,M=0;s(),c.getChanges()}]),angular.module("containersActions",[]).controller("ContainersActionsController",["$scope","$rootScope","$routeParams","Container","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner",function(a,b,c,d,e,f,g,h,i){a.actionContainer=function(b,c,d){var e="";"Ghost"!==d&&(e=-1!==d.indexOf("Exit")&&"Exit 0"!==d||"created"===d||"Created"===d?"start":"stop",j(b,a.swarmUrl,e,c))};var j=function(a,e,f,g){i.spin();var j=f[0].toUpperCase()+f.slice(1)+" container";a.substring(0,12);d.actionCont({id:a,node:e,action:f},function(c){b.$emit("CallUpdateContainer",{}),h.send(j+" : "+g.Names,a)},function(a){h.error("Failure","Container failed to "+f+"."+c.id)}),i.stop()},k=function(c,e,f,g){i.spin();var j=0,k=function(){j-=1,0===j&&(i.stop(),b.$emit("CallUpdateContainer",{}))};angular.forEach(c,function(b){b.Checked&&("start"===f?d.get({id:b.Id,node:a.swarmUrl},function(c){b=c,j+=1,e({id:b.Id,node:a.swarmUrl,action:f,HostConfig:b.HostConfig||{}},function(c){h.send("Container "+g,b.Id);a.containers.indexOf(b);k()},function(a){h.error("Failure",a.data),k()})},function(a){404===a.status?($(".detail").hide(),h.error("Not found","Container not found.")):h.error("Failure",a.data),k()}):e===d.remove?(j+=1,e({id:b.Id,node:a.swarmUrl},function(c){if("4"===c[0]){for(var d=$.map(c,function(a,b){return[a]}),e="",f=0;f<d.length-15;f++)e+=d[f];h.error("Failure Container "+g,e)}else h.send("Container "+g,b.Id);a.containers.indexOf(b);k()},function(a){h.error("Failure Container "+g,a.data),k()})):(j+=1,e({id:b.Id,action:f,node:a.swarmUrl},function(c){h.send("Container "+g,b.Id);a.containers.indexOf(b);k()},function(a){h.error("Failure",a.data),k()})))}),0===j&&i.stop()};a.startAction=function(){k(a.containers,d.actionCont,"start","Started")},a.stopAction=function(){k(a.containers,d.actionCont,"stop","Stopped")},a.restartAction=function(){k(a.containers,d.actionCont,"restart","Restarted")},a.killAction=function(){k(a.containers,d.actionCont,"kill","Killed")},a.pauseAction=function(){k(a.containers,d.actionCont,"pause","Paused")},a.unpauseAction=function(){k(a.containers,d.actionCont,"unpause","Unpaused")},a.removeAction=function(){k(a.containers,d.remove,"","Removed")}}]),angular.module("dashboard",[]).controller("DashboardController",["$scope","Container","Image","Settings","LineChart","ConsulPrimarySwarm","Swarm",function(a,b,c,d,e,f,g){function h(a,b){var c=document.getElementById(a),d=document.getElementById(a).getContext("2d"),e="",f="";switch(screen.availWidth){case 1280:e=c.width/4,f=c.height/4;break;default:e=c.width/2,f=c.height/2}d.textAlign="center",d.textBaseline="middle",d.font="bold 50px Helvetica Neue",d.fillStyle="#9AA1AA",d.fillText(b,e,f)}a.predicate="-Created",a.dashboard="1",a.wrapperDash=function(){$("#wrapper").toggleClass("active")};var i={animation:!1,responsive:!0};f.get({},function(a){var d=atob(a[0].Value);b.query({all:1,node:d},function(a){for(var b=0,c=0,d=0,e=0;e<a.length;e++){var f=a[e];""===f.Status?c+=1:-1!==f.Status.indexOf("Exit")?d+=1:b+=1}var g=new Chart($("#containers-chart").get(0).getContext("2d")),j=[{value:b,color:"#5bb75b",title:"Running"},{value:d,color:"#C7604C",title:"Stopped"},{value:c,color:"#E2EAE9",title:"Created"}];g.Doughnut(j,i);var k=$("#containers-chart-legend").get(0);legend(k,j),h("containers-chart",a.length)}),c.query({all:1,node:d},function(a){for(var b=0,c=0,d=0;d<a.length;d++){var e=a[d];-1!==e.RepoTags[0].indexOf("none")?c+=1:b+=1}var f=new Chart($("#images-chart").get(0).getContext("2d")),g=[{value:b,color:"#5bb75b",title:"Images Tagged"},{value:c,color:"#E2EAE9",title:"Images Untagged"}];f.Doughnut(g,i);var j=$("#images-chart-legend").get(0);legend(j,g),h("images-chart",a.length)}),g.info({node:d},function(a){for(var b=0,c=0,d=0,e=0,f=0,g=0,j=7,k=8,l=0,m=5;m<a.SystemStatus.length;m+=8)"Healthy"===a.SystemStatus[m][1]?b+=1:c+=1,rCpu=a.SystemStatus[j][1].split(" "),d=parseInt(d,10)+parseInt(rCpu[0],10),f=parseInt(f,10)+parseInt(rCpu[2],10),rMemory=a.SystemStatus[k][1].split(" "),e=parseInt(e,10)+parseInt(rMemory[0],10),g=parseInt(g,10)+parseInt(rMemory[3],10),j+=8,k+=8,l++;var n=f-d,o=g-e,p=new Chart($("#hosts-chart").get(0).getContext("2d")),q=new Chart($("#hosts-memroy-chart").get(0).getContext("2d")),r=new Chart($("#hosts-cpu-chart").get(0).getContext("2d")),s=[{value:b,color:"#5bb75b",title:"Running"},{value:c,color:"#C7604C",title:"Stopped"}],t=[{value:e,color:"#5bb75b",title:"Reserve Memory"},{value:o,color:"#E2EAE9",title:"Unreserve Memory"}],u=[{value:d,color:"#5bb75b",title:"Reserve Cpu"},{value:n,color:"#E2EAE9",title:"Unreserve Cpu"}];p.Doughnut(s,i),q.Doughnut(t,i),r.Doughnut(u,i);var v=$("#hosts-chart-legend").get(0),w=$("#hosts-cpu-chart-legend").get(0),x=$("#hosts-memory-chart-legend").get(0);legend(v,s),legend(w,u),legend(x,t),h("hosts-chart",l),h("hosts-memroy-chart",g),h("hosts-cpu-chart",f)})})}]),angular.module("dashboardContainers",[]).controller("DashboardContainersController",["$scope","$rootScope","$routeParams","Container","Swarm","Image","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner",function(a,b,c,d,e,f,g,h,i,j,k){a.toggle=!1,a.dashContainer=!0,a.displayAll=i.displayAll,a.dashboard="3",a.swarmUrl="",a.Nodes=[],b.$on("CallUpdateContainer",function(){m()}),a.predicate="NodeName",a.reverse=!1,a.order=function(b){a.reverse=a.predicate===b?!a.reverse:!1,a.predicate=b},a.toggleSelectAll=function(){angular.forEach(a.containers,function(b){b.Checked=a.toggle})},a.toggleGetAll=function(){i.displayAll=a.displayAll,m({all:i.displayAll?1:0})},a.setAlarm=function(a,b,c){var d="";"1"===c?(b.warning="0",d="to activate"):(b.warning="1",d="to desactivate"),ConsulContainers.setalarm(b,function(b){j.send("Udpdate alarm for "+a,d)},function(b){j.error("Update alarm failed for "+a,d)})},b.$on("CallUpdateContainer",function(){l()});var l=function(){d.query({all:1,node:a.swarmUrl},function(b){a.containers=b.map(function(a){return new ContainerViewModel(a)});for(var c=0;c<a.containers.length;c++){""===a.containers[c].Status&&(a.containers[c].Status="created");var d=a.containers[c].Names[0].split("/");a.containers[c].NodeName=d[1],a.containers[c].ContainerName=d[2]}})},m=function(b){a.RepoTags=[],k.spin(),g.get({},function(b){a.swarmUrl=atob(b[0].Value),e.info({node:a.swarmUrl},function(b){for(var c=0,d=4;d<b.SystemStatus.length;d+=8)a.Nodes[c]=b.SystemStatus[d],c++}),f.query({node:a.swarmUrl},function(b){b.map(function(b){a.RepoTags.push(b.RepoTags[0])})}),d.query({all:1,node:a.swarmUrl},function(b){a.containers=b.map(function(a){return new ContainerViewModel(a)});for(var c=0;c<a.containers.length;c++){""===a.containers[c].Status&&(a.containers[c].Status="created");var d=a.containers[c].Names[0].split("/");a.containers[c].NodeName=d[1],a.containers[c].ContainerName=d[2]}k.stop()})})};m()}]),angular.module("dashboardImages",[]).controller("DashboardImagesController",["$scope","$rootScope","$routeParams","Image","Container","Swarm","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner",function(a,b,c,d,e,f,g,h,i,j,k){a.images=[],a.toggle=!1,a.swarmUrl="",a.dashboard="2",a.Nodes=[],a.containers=[],a.predicate="RepoTag",a.reverse=!1,a.order=function(b){a.reverse=a.predicate===b?!a.reverse:!1,a.predicate=b},b.$on("CallUpdateImage",function(){l()});var l=function(){d.query({node:a.swarmUrl},function(b){a.images=b.map(function(a){return new ImageViewModel(a)});for(var d=0;d<a.images.length;d++){a.images[d].From=c.from,a.images[d].RepoTag=a.images[d].RepoTags[0];var e={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"},f=navigator.browserLanguage,g=new Date(1e3*a.images[d].Created);a.images[d].Create=g.toLocaleDateString(f,e);for(var h=0,i=0;i<a.containers.length;i++)a.images[d].RepoTag===a.containers[i].Image&&h++;0!==h?a.images[d].ContainerCreate=h:a.images[d].ContainerCreate=""}})},m=function(b){k.spin(),g.get({},function(b){a.swarmUrl=atob(b[0].Value),f.info({node:a.swarmUrl},function(b){for(var c=0,d=4;d<b.SystemStatus.length;d+=8)a.Nodes[c]=b.SystemStatus[d],c++}),e.query({all:1,node:a.swarmUrl,notruc:1},function(b){a.containers=b.map(function(a){return new ContainerViewModel(a)})}),d.query({node:a.swarmUrl},function(b){a.images=b.map(function(a){return new ImageViewModel(a)});for(var d=0;d<a.images.length;d++){a.images[d].From=c.from,a.images[d].RepoTag=a.images[d].RepoTags[0];var e={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"},f=navigator.browserLanguage,g=new Date(1e3*a.images[d].Created);a.images[d].Create=g.toLocaleDateString(f,e);for(var h=0,i=0;i<a.containers.length;i++)a.images[d].RepoTag===a.containers[i].Image&&h++;0!==h?a.images[d].ContainerCreate=h:a.images[d].ContainerCreate=""}k.stop()})})};a.toggleSelectAll=function(){angular.forEach(a.images,function(b){b.Checked=a.toggle})},m()}]),angular.module("hostsInforamtion",[]).controller("HostsInformationController",["$scope","$rootScope","$routeParams","Swarm","Container","containernameFilter","errorMsgFilter","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner","Image",function(a,b,c,d,e,f,g,h,i,j,k,l,m){a.dashboard="1",a.actContainer=!0,a.actImage=!1,a.toggle=!1,a.toggleImg=!1,a.newToggle=!0,a.swarmUrl="",a.hostUrl="",a.containers=[],a.images=[],a.Nodes=[],b.$on("CallUpdateContainer",function(){n()}),b.$on("CallUpdateImage",function(){o()}),a.predicate="Names",a.reverse=!1,a.order=function(b){a.reverse=a.predicate===b?!a.reverse:!1,a.predicate=b},a.predicateImage="RepoTags",a.reverse=!1,a.orderImage=function(b){a.reverse=a.predicateImage===b?!a.reverse:!1,a.predicateImage=b},a.activeContainer=function(){p(),a.actContainer=!0,a.actImage=!1},a.activeImage=function(){p(),a.actContainer=!1,a.actImage=!0},a.toggleSelectAll=function(){a.toggle===a.newToggle?a.toggle=!1:a.toggle=!0,angular.forEach(a.containers,function(b){b.Checked=a.toggle})},a.toggleSelectAllImage=function(){a.toggleImg===a.newToggle?a.toggleImg=!1:a.toggleImg=!0,angular.forEach(a.images,function(b){b.Checked=a.toggleImg})};var n=function(){e.query({all:1,node:a.hostUrl},function(b){a.containers=b.map(function(a){return new ContainerViewModel(a)})})},o=function(){m.query({node:a.hostUrl},function(b){a.images=b.map(function(a){return new ImageViewModel(a)});for(var c=0;c<a.images.length;c++){for(var d=0,e=0;e<a.containers.length;e++)a.images[c].RepoTags[0]===a.containers[e].Image&&d++;0!==d?a.images[c].ContainerCreate=d:a.images[c].ContainerCreate=""}})},p=function(b){l.spin(),h.get({},function(b){a.swarmUrl=atob(b[0].Value),d.info({node:a.swarmUrl},function(b){for(var g=4;g<b.SystemStatus.length;g+=8){var h=b.SystemStatus[g][0].split(" ");if(h[1]===c.node){a.hostUrl=b.SystemStatus[g][1],a.Nodes[0]=b.SystemStatus[g];break}}d.info({node:a.hostUrl},function(b){a.hostInfo=b}),e.query({all:1,node:a.hostUrl},function(b){a.containers=b.map(function(a){return new ContainerViewModel(a)}),a.containerNames=b.map(function(a){return f(a)})}),m.query({node:a.hostUrl},function(b){a.images=b.map(function(a){return new ImageViewModel(a)});for(var c=0;c<a.images.length;c++){for(var d=0,e=0;e<a.containers.length;e++)a.images[c].RepoTags[0]===a.containers[e].Image&&d++;0!==d?a.images[c].ContainerCreate=d:a.images[c].ContainerCreate=""}})})}),l.stop()};p()}]),angular.module("hosts",[]).controller("HostsController",["$scope","$routeParams","Swarm","Container","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner",function(a,b,c,d,e,f,g,h,i){a.swarms=[],a.toggle=!1,a.dashboard="1",a.containers=[],a.predicate="nodename",a.reverse=!1,a.order=function(b){a.reverse=a.predicate===b?!a.reverse:!1,a.predicate=b},a.setAlarm=function(a,b,c){var d="";"1"===c?(b.warning="0",d="to activate"):(b.warning="1",d="to desactivate"),ConsulNodes.setalarm(b,function(b){h.send("Udpdate alarm for "+a,d)},function(b){h.error("Update alarm failed for "+a,d)})};var j=function(b,c){d.query({all:1,node:b},function(b){for(var d=0;d<c.length;d++){for(var e=0,f=0,g=0,h=0;h<b.length;h++){var i=b[h],j=i.Names[0].split("/");c[d].nodename===j[1]&&(""===i.Status?g++:-1!==i.Status.indexOf("Exit")&&"Exit 0"!==i.Status?f++:e++)}0===f&&(f=""),0===g&&(g=""),a.swarms[d].running=e,a.swarms[d].stopped=f,a.swarms[d].created=g}})},k=function(b){i.spin(),e.get({},function(b){var d=atob(b[0].Value);c.info({node:d},function(b){for(var c=5,e=9,f=0,g=[],h=4;h<b.SystemStatus.length;h+=8){var k=b.SystemStatus[e][1].split(" "),l=b.SystemStatus[h][0].split(" "),m='{"nodename":"'+l[1]+'","url":"'+b.SystemStatus[h][1]+'","health":"'+b.SystemStatus[c][1]+'","version":"'+k[3]+'"}';c+=8,e+=8,g[f]=JSON.parse(m),f++}a.swarms=g.map(function(a){return new SwarmViewModel(a)}),j(d,a.swarms),i.stop()})})};a.toggleSelectAll=function(){angular.forEach(a.swarms,function(b){b.Checked=a.toggle})},k()}]),angular.module("image",[]).controller("ImageController",["$scope","$q","$routeParams","$location","Image","Container","Messages","LineChart","Swarm","ConsulPrimarySwarm","Repositories",function(a,b,c,d,e,f,g,h,i,j,k){function l(a,b,c,d){var e=a.defer();return b.query({all:1,node:d,notruc:1},function(a){for(var b=[],d=0;d<a.length;d++){var f=a[d];for(r=0;r<c.length;r++){var g=c[r].split(":"),h=g[0];f.Image===h&&c[r]===f.Image+":latest"?b.push(new ContainerViewModel(f)):f.Image===c[r]&&b.push(new ContainerViewModel(f))}}e.resolve(b)}),e.promise}function m(b){e.query({},function(c){c.forEach(function(c){c.Id===b&&"<none>:<none>"!==c.RepoTags[0]&&(a.RepoTags=c.RepoTags)})})}switch(a.history=[],a.containerchart=!0,a.addTags=!1,a.tagInfo={repo:"",version:"",force:!1},a.id="",a.repoTags=[],a.Nodes=[],a.swarmUrl="",c.from){case"dashboard":c.containerId?(a.from="/"+c.from+"/"+c.node+"/containers/"+c.containerId,a.toParent=a.from+"/image/",a.returnTo="to container",a.dashboard="3"):(a.from="/"+c.from+"/images/",a.toParent=a.from,a.returnTo="to images list",a.dashboard="2"),a.dashOn=!0;break;case"hosts":c.containerId?(a.from="/"+c.from+"/"+c.node+"/containers/"+c.containerId,a.toParent=a.from+"/image/",a.returnTo="to container"):(a.from="/"+c.from+"/"+c.node,a.toParent="/"+c.from+"/"+c.node+"/images/",a.returnTo="to "+c.node),a.dashboard="1",a.hostOn=!0,a.node=c.node;break;default:a.from="/",a.returnTo=""}a.removeImage=function(b){e.remove({id:b,node:a.swarmUrl},function(b){b.forEach(function(a){var b=Object.keys(a)[0];g.send(b,a[b])}),b[b.length-1].Deleted?d.path(a.from):d.path(a.toParent+a.id)},function(b){a.error=b.data,g.error("Warning",a.error)})},a.getHistory=function(b){e.history({id:c.id,node:b},function(b){a.history=b})},a.addTag=function(){var b=a.tagInfo;e.tag({id:c.id,node:a.swarmUrl,repo:b.repo,tag:b.version,force:b.force?1:0},function(b){g.send("Tag Added",c.id),d.path(a.toParent+a.id)},function(b){a.error=b.data,$("#error-message").show()})},a.getRepositoriesTags=function(b){var c=b[0].split(":"),d=c[0],e=b[0].split("/");e[1]||(d="library/"+d),k.get({image:d},function(b){"latest"===b.results[0].name?a.lastRepoTags=b.results[1].name:a.lastRepoTags=b.results[0].name})},j.get({},function(d){a.swarmUrl=atob(d[0].Value),i.info({node:a.swarmUrl},function(b){for(var c=0,d=4;d<b.SystemStatus.length;d+=8)a.Nodes[c]=b.SystemStatus[d],c++}),e.get({id:c.id,node:a.swarmUrl},function(c){a.image=c,a.id=c.Id,c.RepoTags?a.RepoTags=c.RepoTags:m(a.id),l(b,f,a.RepoTags,a.swarmUrl).then(function(b){0===b.length&&(a.containerchart=!1),h.build("#containers-started-chart",b,function(a){return new Date(1e3*a.Created).toLocaleDateString()})}),a.getHistory(a.swarmUrl)},function(b){404===b.status?($(".detail").hide(),a.error="Image not found.<br />"+c.id):a.error=b.data,$("#error-message").show()})})}]),angular.module("imagesActions",[]).controller("ImagesActionsController",["$scope","$rootScope","$routeParams","Image","ConsulPrimarySwarm","SettingsConsul","Settings","Messages","ViewSpinner",function(a,b,c,d,e,f,g,h,i){var j=function(c,e,f,g){i.spin();var j=0,k=function(){j-=1,0===j&&(i.stop(),b.$emit("CallUpdateImage",{}))};angular.forEach(c,function(b){b.Checked&&e===d.remove&&(j+=1,e({id:b.Id,node:a.swarmUrl},function(c){if("4"===c[0]){for(var d=$.map(c,function(a,b){return[a]}),e="",f=0;f<d.length-15;f++)e+=d[f];h.error("Failure image "+g,e)}else h.send("Image "+g,b.Id);a.images.indexOf(b);k()},function(a){h.error("Failure image "+g,a.data),k()}))}),0===j&&i.stop()};a.removeImage=function(){j(a.images,d.remove,"","Removed")}}]),angular.module("masthead",[]).controller("MastheadController",["$scope","Settings","Version","ConsulPrimarySwarm","$uibModal",function(a,b,c,d,e){a.template="app/components/masthead/masthead.html",a.showNetworksVolumes=!1,a.dashOn=!1,a.hostOn=!1,a.animationsEnabled=!0,a.endpoint=b.endpoint,a.uiVersion=b.uiVersion,a.docker={},-1!==window.location.hash.indexOf("/hosts/")?a.hostOn=!0:a.dashOn=!0,a.updateMasthead=function(a){for(var b="#navbar_000",c=6,d=a,e=1;c>e;e++)e!==d&&$(b+e).removeClass("active");$(b+d).addClass("active")},d.get({},function(b){var d=atob(b[0].Value);c.get({node:d},function(b){a.docker=b})}),a.open=function(){e.open({animation:a.animationsEnabled,templateUrl:"app/components/about/about.html",controller:"MastheadController"})},a.cancel=function(){modalInstance.dismiss("cancel")},a.refresh=function(){location.reload()}}]),angular.module("pullImage",[]).controller("PullImageController",["$scope","$rootScope","$routeParams","$log","Messages","Image","Swarm","ViewSpinner","ConsulPrimarySwarm","errorMsgFilter","Repositories",function(a,b,c,d,e,f,g,h,i,j,k){a.template="app/components/pullImage/pullImage.html",a.searchResult=!1,a.searchTagResult=!1,a.searchTagSelected=!1,a.nodeSelected=!1,a.fromNode=!0,a.ImagesResult=[],a.TagsResult=[],c.from&&(a.fromNode=!1,a.nodeSelected=!0),a.init=function(){a.searchResult=!1,a.searchTagResult=!1,a.searchTagSelected=!1,a.nodeSelected=!1,a.config={selectedImage:"",searchImage:"",image:"",tag:"",node:""}},a.init(),a.searchDockerCont=function(){var b=angular.copy(a.config);h.spin(),f.search({node:a.swarmUrl,term:b.searchImage},function(b){h.stop(),a.ImagesResult=[],a.TagsResult=[];for(var c=0;c<b.length;c++)a.ImagesResult[c]=b[c].name;a.searchResult=!0},function(a){h.stop()})},a.getRepositoriesTags=function(){h.spin();var b=a.config.image.split("/");b[1]?imageName=a.config.image:imageName="library/"+a.config.image,k.get({image:imageName,n:25},function(b){a.TagsResult=[];for(var c=0;c<b.results.length;c++)a.TagsResult[c]=b.results[c];h.stop(),a.searchTagResult=!0},function(a){h.stop()})},a.selectedTags=function(){a.searchTagSelected=!0},a.selectedNode=function(){a.nodeSelected=!0},a.pull=function(){$("#error-message").hide();var d=angular.copy(a.config);c.node&&(d.node=a.hostUrl);var g=(d.registry?d.registry+"/":"")+(d.repo?d.repo+"/":"")+d.image+(d.tag?":"+d.tag:"");$("#pull-modal").modal("hide"),e.send("Pull image started",g),f.create(d,function(c){if(h.stop(),c.constructor===Array){var d=c.length>0&&c[c.length-1].hasOwnProperty("error");if(d){var f=c[c.length-1];a.error="Cannot pull image "+g+" Reason: "+f.error,$("#pull-modal").modal("show"),$("#error-message").show()}else setTimeout(function(){b.$emit("CallUpdateImage",{}),e.send("Image Added",g),a.init()},1e3)}else e.send("Image Added",g),a.init()},function(b){a.error="Cannot pull image "+g+" Reason: "+b.data,$("#pull-modal").modal("show"),$("#error-message").show()})}}]),angular.module("startContainer",["ui.bootstrap"]).controller("StartContainerController",["$scope","$rootScope","$routeParams","$location","Container","Messages","errorMsgFilter","Swarm","ConsulPrimarySwarm",function(a,b,c,d,e,f,g,h,i){function j(a,b){b.error("Error",g(a))}function k(a){for(var b in a)(null===a[b]||void 0===a[b]||""===a[b]||$.isEmptyObject(a[b])||0===a[b].length)&&delete a[b]}function l(a){return a.map(function(a){return a.name})}a.template="app/components/startContainer/startcontainer.html",a.selected=[],a.fromNode=!1,c.node&&(a.fromNode=!0),a.config={Env:[],Labels:[],Volumes:[],SecurityOpts:[],HostConfig:{PortBindings:[],Binds:[],Links:[],Dns:[],DnsSearch:[],VolumesFrom:[],CapAdd:[],CapDrop:[],Devices:[],LxcConf:[],ExtraHosts:[]}},a.menuStatus={containerOpen:!0,hostConfigOpen:!1},a.create=function(){var d=angular.copy(a.config);if(!d.Image)return void f.send("Warning","Select a Tag version !");if(!a.selected.Host)return void f.send("Warning","Select a server host !");d.Cmd&&"["===d.Cmd[0]?d.Cmd=angular.fromJson(d.Cmd):d.Cmd&&(d.Cmd=d.Cmd.split(" ")),d.Env=d.Env.map(function(a){return a.name+"="+a.value});var g={};d.Labels=d.Labels.forEach(function(a){g[a.key]=a.value}),d.Labels=g,d.Volumes=l(d.Volumes),d.SecurityOpts=l(d.SecurityOpts),d.HostConfig.VolumesFrom=l(d.HostConfig.VolumesFrom),d.HostConfig.Binds=l(d.HostConfig.Binds),d.HostConfig.Links=l(d.HostConfig.Links),d.HostConfig.Dns=l(d.HostConfig.Dns),d.HostConfig.DnsSearch=l(d.HostConfig.DnsSearch),d.HostConfig.CapAdd=l(d.HostConfig.CapAdd),d.HostConfig.CapDrop=l(d.HostConfig.CapDrop),d.HostConfig.LxcConf=d.HostConfig.LxcConf.reduce(function(a,b,c){return a[b.name]=b.value,a},{}),d.HostConfig.ExtraHosts=d.HostConfig.ExtraHosts.map(function(a){return a.host+":"+a.ip});var h={},i={};d.HostConfig.PortBindings.forEach(function(a){var b=a.intPort+"/tcp";"udp"===a.protocol&&(b=a.intPort+"/udp");var c={HostIp:a.ip,HostPort:a.extPort};a.intPort?(h[b]={},b in i?i[b].push(c):i[b]=[c]):f.send("Warning","Internal port must be specified for PortBindings")}),d.ExposedPorts=h,d.HostConfig.PortBindings=i,d.SwarmHost=a.swarmUrl,k(d.HostConfig),k(d);$("#create-modal").modal("hide"),e.create(d,function(d){f.send("Container Created",d.Id),c.node&&b.$emit("CallUpdateContainer",{}),a.dashContainer&&b.$emit("CallUpdateContainer",{}),delete a.config,delete a.selected,a.selected=[],a.config={Env:[],Labels:[],Volumes:[],SecurityOpts:[],HostConfig:{PortBindings:[],Binds:[],Links:[],Dns:[],DnsSearch:[],VolumesFrom:[],CapAdd:[],CapDrop:[],Devices:[],LxcConf:[],ExtraHosts:[]}}},function(a){j(a,f)})},a.addEntry=function(a,b){a.push(b)},a.addNodeEntry=function(b){var c={name:"constraint:node=",value:a.selected.Host};b.push(c)},a.rmEntry=function(a,b){var c=a.indexOf(b);
a.splice(c,1)}}]),angular.module("wrapperDashboard",[]).controller("WrapperDashboardController",["$scope",function(a){a.template="app/components/wrapperDashboard/wrapperDashboard.html",a.wrapperDash=function(){$("#wrapper").toggleClass("active")},a.updateDash=function(a){for(var b="#wrapper-dash_000",c=6,d=a,e=1;c>e;e++)e!==d&&$(b+e).removeClass("active");$(b+d).addClass("active")},a.$on("$includeContentLoaded",function(b){a.updateDash(a.dashboard)})}]),angular.module("wrapperHosts",[]).controller("WrapperHostsController",["$scope",function(a){a.template="app/components/wrapperHosts/wrapperHosts.html",a.wrapperDash=function(){$("#wrapper").toggleClass("active")},a.updateHosts=function(a){for(var b="#wrapper-hosts_000",c=6,d=a,e=1;c>e;e++)e!==d&&$(b+e).removeClass("active");$(b+d).addClass("active")},a.$on("$includeContentLoaded",function(b){a.updateHosts(a.dashboard)})}]),angular.module("swarmui.filters",[]).filter("truncate",function(){"use strict";return function(a,b,c){return isNaN(b)&&(b=10),void 0===c&&(c="..."),a.length<=b||a.length-c.length<=b?a:String(a).substring(0,b-c.length)+c}}).filter("truncateFirstsCaracts",function(){"use strict";return function(a,b){return isNaN(b)&&(b=1),String(a).substring(b)}}).filter("containername",function(){"use strict";return function(a){var b=a.Names[0];return b.substring(1,b.length)}}).filter("nodename",function(){"use strict";return function(a){var b=a[0];return b.substring(1,b.length)}}).filter("nodeurl",function(){"use strict";return function(a){return a[1]}}).filter("statusbarTask",function(){"use strict";return function(a){switch(a){case"success":return"success";case"starting":return"striped active";case"failed":return"danger";case"canceled":return"warning";case"waiting":return"warning"}}}).filter("statusBadge",function(){"use strict";return function(a){return"created"===a||"Created"===a?"default":"Ghost"===a?"important":-1!==a.indexOf("Paused")?"primary":-1!==a.indexOf("Exit")&&"Exit 0"!==a||-1!==a.indexOf("exited")?"warning":"success"}}).filter("statusControle",function(){"use strict";return function(a){return"created"===a?"Created":a}}).filter("statusInverseBadge",function(){"use strict";return function(a){return"created"===a||"Created"===a?"success":"Ghost"===a?"important":-1!==a.indexOf("Exit")&&"Exit 0"!==a?"success":"danger"}}).filter("statusIconsStartStop",function(){"use strict";return function(a){return"created"===a||"Created"===a?"glyphicon glyphicon-play":"Ghost"===a?"glyphicon glyphicon-off":-1!==a.indexOf("Exit")&&"Exit 0"!==a?"glyphicon glyphicon-play":"glyphicon glyphicon-off"}}).filter("statusButtonActive",function(){"use strict";return function(a){return"unknown"===a?"disabled":""}}).filter("statusbadgeNode",function(){"use strict";return function(a){return"Unknown"===a?"important":"success"}}).filter("statusbadgeOnAlarm",function(){"use strict";return function(a){return"1"===a?"btn-default":"btn-success active"}}).filter("statusbadgeOffAlarm",function(){"use strict";return function(a){return"1"===a?"btn-danger active":"btn-default"}}).filter("getstatetext",function(){"use strict";return function(a){return void 0===a?"":a.Ghost&&a.Running?"Ghost":a.Running&&a.Paused?"Running (Paused)":a.Running?"Running":"Stopped"}}).filter("getstatelabel",function(){"use strict";return function(a){return void 0===a?"label-default":a.Ghost&&a.Running?"label-important":a.Paused?"label-info":a.Running?"label-success":"label-warning"}}).filter("humansize",function(){"use strict";return function(a){var b=["Bytes","KB","MB","GB","TB"];if(0===a)return"n/a";var c=parseInt(Math.floor(Math.log(a)/Math.log(1024)),10),d=a/Math.pow(1024,c),e=1>c?0:c-1;return d.toFixed(e)+" "+b[[c]]}}).filter("repotag",function(){"use strict";return function(a){if(a.RepoTags&&a.RepoTags.length>0){var b=a.RepoTags[0];return"<none>:<none>"===b&&(b=""),b}return""}}).filter("getdate",function(){"use strict";return function(a){if(a){var b={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"},c=navigator.browserLanguage,d=new Date(a);return d.toLocaleDateString(c,b)}}}).filter("getdate1000",function(){"use strict";return function(a){var b={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"},c=navigator.browserLanguage,d=new Date(1e3*a);return d.toLocaleDateString(c,b)}}).filter("errorMsg",function(){return function(a){for(var b=0,c="";a[b]&&"string"==typeof a[b];)c+=a[b],b++;return c}}),angular.module("swarmui.services",["ngResource"]).factory("ConsulPrimarySwarm",["$resource","SettingsConsul",function(a,b){"use strict";return a(b.url+"/v1/kv/docker/swarm/leader",{node:"@name"},{get:{method:"GET",isArray:!0}})}]).factory("Swarm",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/:node/:action",{name:"@name"},{info:{method:"GET",params:{action:"info"}}})}]).factory("Container",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/:node/containers/:id/:action",{name:"@name"},{query:{method:"GET",params:{node:"@node",all:0,action:"json"},isArray:!0},get:{method:"GET",params:{node:"@node",action:"json"}},actionCont:{method:"POST",params:{id:"@id",node:"@node",t:5,action:"@action"}},changes:{method:"GET",params:{node:"@node",action:"changes"},isArray:!0},create:{method:"POST",params:{node:"@SwarmHost",action:"create"}},remove:{method:"DELETE",params:{id:"@id",node:"@node",v:0}},rename:{method:"POST",params:{id:"@id",node:"@node",action:"rename"},isArray:!1},top:{method:"GET",params:{id:"@id",node:"@node",ps_args:"@ps_args",action:"top"}},stats:{method:"GET",params:{id:"@id",node:"@node",stream:!1,action:"stats"},timeout:5e3}})}]).factory("ContainerCommit",["$resource","$http","Settings",function(a,b,c){"use strict";return{commit:function(a,d){b({method:"POST",url:c.url+"/:node/commit",params:{container:a.id,repo:a.repo}}).success(d).error(function(a,b,c,d){console.log(error,a)})}}}]).factory("ContainerLogs",["$resource","$http","Settings",function(a,b,c){"use strict";return{get:function(a,d,e,f){b({method:"GET",url:c.url+"/"+d+"/containers/"+a+"/logs",params:{stdout:e.stdout||0,stderr:e.stderr||0,timestamps:e.timestamps||0,tail:e.tail||"all"}}).success(f).error(function(a,b,c,d){console.log(error,a)})}}}]).factory("Image",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/:node/images/:id/:action",{},{query:{method:"GET",params:{all:0,action:"json"},isArray:!0},get:{method:"GET",params:{action:"json"}},search:{method:"GET",params:{node:"@node",action:"search",term:"@term"},isArray:!0},history:{method:"GET",params:{action:"history"},isArray:!0},create:{method:"POST",isArray:!0,transformResponse:[function(a){var b=a.replace(/\n/g," ").replace(/\}\W*\{/g,"}, {");return angular.fromJson("["+b+"]")}],params:{node:"@node",action:"create",fromImage:"@image",repo:"@repo",tag:"@tag",registry:"@registry"}},insert:{method:"POST",params:{id:"@id",action:"insert"}},push:{method:"POST",params:{id:"@id",action:"push"}},tag:{method:"POST",params:{id:"@id",node:"@node",action:"tag",force:0,repo:"@repo",tag:"@tag"}},remove:{method:"DELETE",params:{id:"@id",node:"@node"},isArray:!0}})}]).factory("Repositories",["$resource","SettingsRepo",function(a,b){"use strict";return a(b.url+"/hub.docker.com/v2/repositories/:image/tags",{},{get:{method:"GET",params:{image:"@image"}}})}]).factory("Version",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/:node/version",{},{get:{method:"GET",params:{node:"@node"}}})}]).factory("Auth",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/auth",{},{get:{method:"GET"},update:{method:"POST"}})}]).factory("Info",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/info",{},{get:{method:"GET"}})}]).factory("Network",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/networks/:id/:action",{id:"@id"},{query:{method:"GET",isArray:!0},get:{method:"GET"},create:{method:"POST",params:{action:"create"}},remove:{method:"DELETE"},connect:{method:"POST",params:{action:"connect"}},disconnect:{method:"POST",params:{action:"disconnect"}}})}]).factory("Volume",["$resource","Settings",function(a,b){"use strict";return a(b.url+"/volumes/:name/:action",{name:"@name"},{query:{method:"GET"},get:{method:"GET"},create:{method:"POST",params:{action:"create"}},remove:{method:"DELETE"}})}]).factory("SettingsConsul",["CONSUL_ENDPOINT",function(a){"use strict";var b=a,c="true"===(localStorage.getItem("firstLoad")||"true");return{displayAll:!1,endpoint:a,url:b,firstLoad:c}}]).factory("SettingsRepo",["DOCKERREPO_ENDPOINT",function(a){"use strict";var b=a,c="true"===(localStorage.getItem("firstLoad")||"true");return{displayAll:!1,endpoint:a,url:b,firstLoad:c}}]).factory("Settings",["DOCKER_ENDPOINT","DOCKER_PORT","UI_VERSION",function(a,b,c){"use strict";var d=a;b&&(d=d+b+"\\"+b);var e="true"===(localStorage.getItem("firstLoad")||"true");return{displayAll:!1,endpoint:a,uiVersion:c,url:d,firstLoad:e}}]).factory("ViewSpinner",function(){"use strict";var a=new Spinner,b=document.getElementById("view");return{spin:function(){a.spin(b)},stop:function(){a.stop()}}}).factory("Messages",["$rootScope",function(a){"use strict";return{send:function(a,b){$.gritter.add({title:a,text:b,time:2e3,before_open:function(){return 3===$(".gritter-item-wrapper").length?!1:void 0}})},error:function(a,b){$.gritter.add({title:a,text:b,time:1e4,before_open:function(){return 4===$(".gritter-item-wrapper").length?!1:void 0}})}}}]).factory("LineChart",["Settings",function(a){"use strict";return{build:function(a,b,c){for(var d=new Chart($(a).get(0).getContext("2d")),e={},f=0;f<b.length;f++){var g=b[f],h=c(g),i=e[h];void 0===i&&(i=0),i+=1,e[h]=i}var j=[];b=[];var k=Object.keys(e),l=1;for(f=k.length-1;f>-1;f--){var m=k[f];j.push(m),b.push(e[m]),e[m]>l&&(l=e[m])}var n=Math.min(l,10),o={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:b};d.Line({labels:j,datasets:[o]},{scaleStepWidth:Math.ceil(l/n),pointDotRadius:1,scaleIntegersOnly:!0,scaleOverride:!0,scaleSteps:n})}}}]),angular.module("swarmui.templates",["app/components/about/about.html","app/components/container/container.html","app/components/dashboard/dashboard.html","app/components/dashboardContainers/dashboardContainers.html","app/components/dashboardImages/dashboardImages.html","app/components/hostInformations/hostInformation.html","app/components/hosts/hosts.html","app/components/image/image.html","app/components/masthead/masthead.html","app/components/pullImage/pullImage.html","app/components/startContainer/startcontainer.html","app/components/wrapperDashboard/wrapperDashboard.html","app/components/wrapperHosts/wrapperHosts.html"]),angular.module("app/components/about/about.html",[]).run(["$templateCache",function(a){a.put("app/components/about/about.html",'\n<div class="modal-content">\n  <div class="modal-header">\n    <h3> SwarmUI Information</h3>\n  </div>\n  <div class="modal-body">\n      <strong>API Endpoint: </strong>{{ endpoint }}<br/>\n      <strong>API Version: </strong>{{ docker.ApiVersion }}<br/>\n      <strong>Swarm version: </strong>{{ docker.Version }}<br/>\n      <strong>UI version: </strong>{{ uiVersion }}<br/>\n      <strong>Docker Git Commit: </strong>{{ docker.GitCommit }}<br/>\n      <strong>Docker Go Version: </strong>{{ docker.GoVersion }}<br/>\n  </div>\n</div>\n\n')}]),angular.module("app/components/container/container.html",[]).run(["$templateCache",function(a){a.put("app/components/container/container.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-if="dashOn" ng-include="template" ng-controller="WrapperDashboardController"></div>\n  <div ng-if="hostOn" ng-include="template" ng-controller="WrapperHostsController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12">\n        <h1 class="page-header">Container information on server {{ container.Node }}</h1>\n        <div class="panel panel-default">\n          <div class="panel-heading">\n            <div ng-if="!container.edit">\n              <h3 class="panel-title">\n                <span class="col-xs-11" style="margin-top: 5px; font-size: 18px;">{{ container.Name|truncateFirstsCaracts }}</span>\n                <div class="btn-group">\n                  <button type="button" class="btn btn-default dropdown-toggle" style="margin: 0;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                    Action <span class="caret"></span>\n                  </button>\n                  <ul class="dropdown-menu">\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="container.edit = true;">Rename container\n                      </button>\n                    </li>\n                    <li role="separator" class="divider"></li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="start()"\n                        ng-show="!container.State.Running">Start\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="stop()"\n                        ng-show="container.State.Running && !container.State.Paused">Stop\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="kill()"\n                        ng-show="container.State.Running && !container.State.Paused">Kill\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="pause()"\n                        ng-show="container.State.Running && !container.State.Paused">Pause\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="unpause()"\n                        ng-show="container.State.Running && container.State.Paused">Unpause\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="restart()"\n                        ng-show="container.State.Running && !container.State.Stopped">Restart\n                      </button>\n                    </li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="commit()"\n                        ng-show="container.State.Running && !container.State.Paused">Commit\n                      </button>\n                    </li>\n                    <li role="separator" ng-show="!container.State.Running" class="divider"></li>\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="remove()"\n                        ng-show="!container.State.Running">Remove Container\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </h3>\n            </div>\n            <div ng-if="container.edit">\n              <h3 class="panel-title">\n                <input type="text" class="input-container" ng-model="container.newContainerName">\n                <button class="btn btn-success"\n                  ng-click="renameContainer()">Save\n                </button>\n                <button class="btn btn-danger"\n                  ng-click="container.edit = false;">&times;\n                </button>\n              </h3>\n            </div>\n          </div>\n          <div class="panel-body">\n            <a href="/#{{ fromTo }}"><- Return {{ returnTo }}</a><br/><br/>\n            <div class=\'col-xs-9 well\'>\n              <h4>Global</h4>\n              <b>Id : </b>{{ container.Id }}\n              <br/>\n              <b>Created : </b>{{ container.Created | date: \'medium\' }}\n              <h4>Network</h4>\n              <b>IP : </b>{{ container.NetworkSettings.IPAddress }}\n              <br/>\n              <b>Gateway : </b>{{ container.NetworkSettings.Gateway }}\n              <br/>\n              <b>DNS : </b><span ng-repeat="dns in container.HostConfig.Dns"> {{ dns }} </span>\n              <br/>\n              <br/>\n            </div>\n            <div class=\'col-xs-1\'>\n              <br/>\n            </div>\n            <div class=\'col-xs-2\'>\n              <center>\n                <span class="label {{ container.State | getstatelabel }} status-container">\n                  {{ container.State | getstatetext }}\n                </span>\n              </center>\n            </div>\n            <div class="row">\n              <div class="col-xs-12 well">\n                <div class="col-xs-4">\n                  <div class="panel panel-default">\n                    <div class="panel-heading">\n                      <h3 class="panel-title">\n                        <b>CPU</b>\n                      </h3>\n                    </div>\n                    <div class="panel-body">\n                      <div style="width: 98%;">\n                        <canvas id="cpu-stats-chart" style="width: 95%;"></canvas>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-xs-4">\n                  <div class="panel panel-default">\n                    <div class="panel-heading">\n                      <h3 class="panel-title">\n                        <b>Memory</b>\n                      </h3>\n                    </div>\n                    <div class="panel-body">\n                      <div style="width: 98%;">\n                        <canvas id="memory-stats-chart"></canvas>\n                      </div>\n                      <div>\n                        <table class="table">\n                            <tr>\n                                <td>Max usage</td>\n                                <td>{{ data.memory_stats.max_usage | humansize }}</td>\n                            </tr>\n                            <tr>\n                                <td>Limit</td>\n                                <td>{{ data.memory_stats.limit | humansize }}</td>\n                            </tr>\n                            <tr>\n                                <td>Fail count</td>\n                                <td>{{ data.memory_stats.failcnt }}</td>\n                            </tr>\n                        </table>\n                        <uib-accordion>\n                            <uib-accordion-group heading="Other stats">\n                                <table class="table">\n                                    <tr ng-repeat="(key, value) in data.memory_stats.stats">\n                                        <td>{{ key }}</td>\n                                        <td>{{ value }}</td>\n                                    </tr>\n                                </table>\n                            </uib-accordion-group>\n                        </uib-accordion>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-xs-4">\n                  <div class="panel panel-default">\n                    <div class="panel-heading">\n                      <h3 class="panel-title">\n                        <b>Network {{ networkName}}</b>\n                      </h3>\n                    </div>\n                    <div class="panel-body">\n                      <div style="width: 98%;">\n                        <canvas id="network-stats-chart"></canvas>\n                      </div>\n                      <div>\n                          <div id="network-legend" style="margin-bottom: 20px;"></div>\n                          <uib-accordion>\n                              <uib-accordion-group heading="Other stats">\n                                  <table class="table">\n                                      <tr ng-repeat="(key, value) in data.network">\n                                          <td>{{ key }}</td>\n                                          <td>{{ value }}</td>\n                                      </tr>\n                                  </table>\n                              </uib-accordion-group>\n                          </uib-accordion>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <uib-tabset active="active">\n            <uib-tab index="0" heading="Info" ng-click="destroyInterval()">\n            <!-- Tabs 1 container info -->\n              <table class="table table-striped no-margin-bottom">\n                <tbody>\n                  <tr>\n                    <td class="col-xs-2">Path:</td>\n                    <td class="col-xs-10">{{ container.Path }}</td>\n                  </tr>\n                  <tr>\n                    <td>Args:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li>{{ container.Args.join(\' \') || \'None\' }}</li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Exposed Ports:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li ng-repeat="(k, v) in container.Config.ExposedPorts">{{ k }}</li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Environment:</td>\n                    <td>\n                      <ul class="deco-none">\n                        <li ng-repeat="k in container.Config.Env"><b>{{ k }}</b></li>\n                      </ul>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Labels:</td>\n                    <td>\n                      <table role="table" class="table">\n                        <tr>\n                          <th>Key</th>\n                          <th>Value</th>\n                        </tr>\n                        <tr ng-repeat="(k, v) in container.Config.Labels">\n                          <td>{{ k }}</td>\n                          <td>{{ v }}</td>\n                        </tr>\n                      </table>\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>Publish All:</td>\n                      <td>{{ container.HostConfig.PublishAllPorts }}</td>\n                  </tr>\n                  <tr>\n                    <td>Ports:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li ng-repeat="(containerport, hostports) in container.NetworkSettings.Ports">\n                            {{ containerport }} => <span class="label label-default" ng-repeat="(k,v) in hostports">{{ v.HostIp }}:{{ v.HostPort }}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Cmd:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li>{{ container.Config.Cmd }}</li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Entrypoint:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li>{{ container.Config.Entrypoint.join(\' \') || \'None\' }}</li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Volumes:</td>\n                    <td>{{ container.Volumes }}</td>\n                  </tr>\n                  <tr>\n                    <td>SysInitpath:</td>\n                    <td>{{ container.SysInitPath }}</td>\n                  </tr>\n                  <tr>\n                    <td>Image:</td>\n                    <td><a href="#/{{ container.From }}/{{ container.Node }}/containers/{{ container.Id }}/image/{{ container.Image }}/">{{ container.Config.Image }}</a></td>\n                  </tr>\n                  <tr>\n                    <td>State:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <accordion close-others="true">\n                          <accordion-group heading="{{ container.State|getstatetext }}">\n                            <ul class="deco-none">\n                              <li ng-repeat="(key, val) in container.State">{{key}} : {{ val }}</li>\n                            </ul>\n                          </accordion-group>\n                        </accordion>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Changes:</td>\n                    <td>\n                      <div class="well well-large no-margin-bottom">\n                        <ul class="deco-none">\n                          <li ng-repeat="change in changes | filter:hasContent">\n                            <strong>{{ change.Path }}</strong> {{ change.Kind }}\n                          </li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            <!-- End Tabs 1 container info -->\n            </uib-tab>\n            <uib-tab index="1" heading="Logs" ng-click="getLogs()">\n              <div class="row logs">\n                  <div class="col-xs-12">\n                    <div class="pull-right col-xs-6">\n                      <div class="col-xs-6">\n                        <a class="btn btn-primary" ng-click="toggleTail()" role="button">Reload logs</a>\n                        <input id="tailLines" type="number" ng-style="{width: \'45px\'}"\n                          ng-model="tailLines" ng-keypress="($event.which === 13)? toggleTail() : 0"/>\n                        <label for="tailLines">lines</label>\n                      </div>\n                      <div class="col-xs-4">\n                        <input id="timestampToggle" type="checkbox" ng-model="showTimestamps"\n                          ng-change="toggleTimestamps()"/> <label for="timestampToggle">Timestamps</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class="col-xs-12">\n                    <div class="panel panel-default">\n                      <div class="panel-heading">\n                        <h3 id="stdout" class="panel-title">STDOUT</h3>\n                      </div>\n                      <div class="panel-body">\n                        <pre id="stdoutLog" class="pre-scrollable pre-x-scrollable">{{stdout}}</pre>\n                      </div>\n                    </div>\n                  </div>\n                  <div class="col-xs-12">\n                    <div class="panel panel-default">\n                      <div class="panel-heading">\n                        <h3 id="stderr" class="panel-title">STDERR</h3>\n                      </div>\n                      <div class="panel-body">\n                        <pre id="stderrLog" class="pre-scrollable pre-x-scrollable">{{stderr}}</pre>\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </uib-tab>\n            <uib-tab index="2" heading="Top" ng-click="getTop()">\n              <div class="containerTop">\n                <div class="form-group col-xs-2">\n                    <input type="text" class="form-control" placeholder="[options] (aux)" ng-model="ps_args">\n                </div>\n                <button type="button" class="btn btn-default" ng-click="getTop()">Submit</button>\n\n                <table class="table table-striped">\n                    <thead>\n                    <tr>\n                        <th ng-repeat="title in containerTop.Titles">{{title}}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr ng-repeat="processInfos in containerTop.Processes">\n                        <td ng-repeat="processInfo in processInfos track by $index">{{processInfo}}</td>\n                    </tr>\n                    </tbody>\n                </table>\n              </div>\n            </uib-tab>\n          </uib-tabset>\n        </div>\n       <!-- Middle Container -->   \n      </div>\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>')}]),angular.module("app/components/dashboard/dashboard.html",[]).run(["$templateCache",function(a){a.put("app/components/dashboard/dashboard.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-include="template" ng-controller="WrapperDashboardController"></div>\n  \n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12" id="body-middle-container">\n\n        <h1 class="page-header">Dashboard</h1>\n        <div class="row ">\n\n          <div class="panel panel-default">\n            <div class="panel-heading">\n              <h3 class="panel-title">Docker Informations</h3>\n            </div>\n            <div class="panel-body placeholder-dash">\n              <div class="col-xs-6 col-md-4">\n                <h3>Containers Status </h3>\n                <canvas id="containers-chart">\n                  <p class="browserupgrade">\n                    You are using an <strong>outdated</strong> browser. Please \n                    <a href="http://browsehappy.com/">upgrade your browser</a> \n                    to improve your experience.\n                  </p>\n                </canvas>\n                <div id="containers-chart-legend"></div>\n              </div>\n              <div class="col-xs-6 col-md-4">\n                <h3>Images Status</h3>\n                <canvas id="images-chart">\n                  <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please \n                    <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n                </canvas>\n                <div id="images-chart-legend"></div>\n              </div>\n              <div class="col-xs-6 col-md-4">\n                <h3>Hosts Status</h3>\n                <canvas id="hosts-chart">\n                  <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please \n                    <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n                </canvas>\n                <div id="hosts-chart-legend"></div>\n              </div>\n              <div class="col-xs-6 col-md-4">\n                <h3>Hosts Reserve CPU</h3>\n                <canvas id="hosts-cpu-chart">\n                  <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please \n                    <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n                </canvas>\n                <div id="hosts-cpu-chart-legend"></div>\n              </div>\n              <div class="col-xs-6 col-md-4">\n                <h3>Hosts Reserve Memory</h3>\n                <canvas id="hosts-memroy-chart">\n                  <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please \n                    <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n                </canvas>\n                <div id="hosts-memory-chart-legend"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <!-- Middle Container -->\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>');
}]),angular.module("app/components/dashboardContainers/dashboardContainers.html",[]).run(["$templateCache",function(a){a.put("app/components/dashboardContainers/dashboardContainers.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-include="template" ng-controller="WrapperDashboardController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12" id="body-middle-container">\n        <h1 class="page-header">Containers Docker</h1>\n        <div class="panel panel-default">\n          <div class="panel-heading">\n            <h3 class="panel-title">\n              <span class="col-xs-11" style="margin-top: 5px; font-size: 18px;">Containers\'s List</span>\n              <div class="btn-group">\n                <button type="button" class="btn btn-default dropdown-toggle" style="margin: 0;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                  Action <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu">\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      data-toggle="modal" data-target="#create-modal">Create Container\n                    </button>\n                  </li>\n                  <li role="separator" ng-show="!container.State.Running" class="divider"></li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="startAction()">Start\n                    </button>\n                  </li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="stopAction()">Stop\n                    </button>\n                  </li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="killAction()">Kill\n                    </button>\n                  </li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="pauseAction()">Pause\n                    </button>\n                  </li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="unpauseAction()">Unpause\n                    </button>\n                  </li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="restartAction()">Restart\n                    </button>\n                  </li>\n                  <li role="separator" ng-show="!container.State.Running" class="divider"></li>\n                  <li>\n                    <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="removeAction()">Remove Container\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </h3>\n          </div>\n          <div ng-include="template" ng-controller="StartContainerController"></div>\n          <!-- Table -->\n          <table class="table table-striped">\n            <tr>\n              <th><input type="checkbox" ng-model="toggle" ng-change="toggleSelectAll()" style="margin-top: 35px;"/></th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'NodeName\')">\n                  Hostname\n                  <span class="sortorder" ng-show="predicate === \'NodeName\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.NodeName" placeholder="Filter...">\n              </th>\n              <th>\n                <button class="btn-link btn-block btn-dropdown" ng-click="order(\'Id\')">\n                  Container ID\n                  <span class="sortorder" ng-show="predicate === \'Id\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.Id" placeholder="Filter...">\n              </th>\n              <th>\n                <button class="btn-link btn-block btn-dropdown" ng-click="order(\'ContainerName\')">\n                  Name\n                  <span class="sortorder" ng-show="predicate === \'ContainerName\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.ContainerName" placeholder="Filter...">\n              </th>\n              <th>\n                <button class="btn-link btn-block btn-dropdown" ng-click="order(\'Image\')">\n                  Image\n                  <span class="sortorder" ng-show="predicate === \'Image\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.Image" placeholder="Filter...">\n              </th>\n              <th>\n                <button class="btn-link btn-block btn-dropdown" ng-click="order(\'Status\')">\n                  Container Status\n                  <span class="sortorder" ng-show="predicate === \'Status\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.Status" placeholder="Filter...">\n              </th>\n              <th>Actions</th>\n            </tr>\n            <tr ng-repeat="container in containers | filter:search:strict | orderBy:predicate:reverse">\n              <td><input type="checkbox" ng-model="container.Checked" /></td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ container.NodeName }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <a href="#/dashboard/{{ container.NodeName }}/containers/{{ container.Id }}">\n                  {{ container.Id|truncate:15 }}\n                </a>\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ container.ContainerName }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ container.Image }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <span class="label label-{{ container.Status|statusBadge }}" style="font-size: 95%">\n                  {{ container.Status|statusControle }}\n                </span>\n              </td>\n              <td>\n                <a ng-controller="ContainersActionsController" href="#/dashboard/containers/" type="button" id="button_agent_action" ng-click="actionContainer(container.Id, container, container.Status)" class="btn btn-sm btn-default {{ container.Status|statusButtonActive }}" style="padding: 4px;" autocomplete="off">\n                  <span class="label label-{{ container.Status|statusInverseBadge }} {{ container.Status|statusIconsStartStop }}" style="font-size: 100%;top: 1px;"> </span>\n                </a>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <!-- Middle Container -->   \n      </div>\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>')}]),angular.module("app/components/dashboardImages/dashboardImages.html",[]).run(["$templateCache",function(a){a.put("app/components/dashboardImages/dashboardImages.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-include="template" ng-controller="WrapperDashboardController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12" id="body-middle-container">\n        <h1 class="page-header">Images Docker</h1>\n        <div class="panel panel-default">\n          <div class="panel-heading">\n            <h3 class="panel-title">\n              <span class="col-xs-11" style="margin-top: 5px; font-size: 18px;">Images\'s List</span>\n              <div class="btn-group">\n                <button type="button" class="btn btn-default dropdown-toggle" style="margin: 0;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                  Action <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu">\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      data-toggle="modal" data-target="#pull-modal">Pull image\n                    </button>\n                  </li>\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      ng-controller="ImagesActionsController"\n                      ng-click="removeImage()">Remove images\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </h3>\n          </div>\n          <div ng-include="template" ng-controller="PullImageController"></div>\n          <!-- Table -->\n          <table class="table table-striped">\n            <tr>\n              <th></th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'RepoTag\')">\n                  Tags\n                  <span class="sortorder" ng-show="predicate === \'RepoTag\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.RepoTag" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'Id\')">\n                  Id\n                  <span class="sortorder" ng-show="predicate === \'Id\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.Id" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'Created\')">\n                  Created\n                  <span class="sortorder" ng-show="predicate === \'Created\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.Create" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'VirtualSize\')">\n                  VirtualSize\n                  <span class="sortorder" ng-show="predicate === \'VirtualSize\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.VirtualSize" placeholder="Filter...">\n              </th>\n              <th>\n                Containers\n              </th>\n            </tr>\n            <tr ng-repeat="image in images | filter:search:strict | orderBy:predicate:reverse">\n              <td>\n                <div ng-if="!image.ContainerCreate">\n                  <input type="checkbox" ng-model="image.Checked" />\n                </div>\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <a href="#/{{ image.From }}/images/{{ image.Id }}">{{ image.RepoTag }}</a>\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ image.Id | truncate:15  }}\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;\n                {{ image.Created | getdate1000 }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ image.VirtualSize | humansize }}\n              </td>\n              <td>\n                <a href="" style="text-decoration: none;" data-toggle="tooltip" data-placement="top" title="Container(s) created">\n                  <span class="label label-success" style="font-size: 95%;">{{ image.ContainerCreate }}</span>\n                </a>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <!-- Middle Container --> \n      </div>\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>')}]),angular.module("app/components/hostInformations/hostInformation.html",[]).run(["$templateCache",function(a){a.put("app/components/hostInformations/hostInformation.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-include="template" ng-controller="WrapperHostsController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n	<div class="container-fluid">\n		<div class="row">\n			<!-- Middle Container -->\n			<div class="col-xs-12" id="body-middle-container">\n				<h1 class="page-header">Host information</h1>\n				<a href=\'/#/hosts/\'><- Return Hosts</a><br/><br/>\n				<div class="panel panel-default">\n					<div class="panel-heading">\n						<h3 class="panel-title">\n							<span class="col-xs-11" style="margin-top: 5px; font-size: 18px;">{{ hostInfo.Name }}</span>\n              <div class="btn-group">\n                <button type="button" class="btn btn-default dropdown-toggle" style="margin: 0;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                  Action <span class="caret"></span>\n                </button>\n								<ul class="dropdown-menu">\n								  <div ng-if="actImage">\n									  <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        data-toggle="modal" data-target="#pull-modal">Pull image\n                      </button>\n                    </li>\n                  </div>\n                  <div ng-if="actContainer">\n									  <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        data-toggle="modal" data-target="#create-modal">Create Container\n                      </button>\n                    </li>\n									  <li role="separator" class="divider"></li>\n									  <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="startAction()">Start Container\n                      </button>\n                    </li>\n									  <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="stopAction()">Stop Container\n                      </button>\n                    </li>\n                    <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="killAction()">Kill Container\n                      </button>\n                    </li>\n                    <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="pauseAction()">Pause Container\n                      </button>\n                    </li>\n                    <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="unpauseAction()">Unpause Container\n                      </button>\n                    </li>\n                    <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="restartAction()">Restart Container\n                      </button>\n                    </li>\n                    <li role="separator" ng-show="!container.State.Running" class="divider"></li>\n                    <li>\n                      <button ng-controller="ContainersActionsController" type="button" class="btn-link btn-block btn-dropdown"\n                        ng-click="removeAction()">Remove Container\n                      </button>\n                    </li>\n                  </div>\n                  <div ng-if="actImage">\n                    <li>\n                      <button type="button" class="btn-link btn-block btn-dropdown"\n                        ng-controller="ImagesActionsController"\n                        ng-click="removeImage()">Remove images\n                      </button>\n                    </li>\n                  </div>\n								</ul>\n							</div>\n						</h3>\n					</div>\n					<div ng-include="template" ng-controller="PullImageController"></div>\n					<div ng-include="template" ng-controller="StartContainerController"></div>\n					<div class="panel-body">\n						<div class=\'col-xs-8 well\'>\n							<h5><b>System :</b></h5>\n							<b>OSType : </b>\n							{{ hostInfo.OSType }}\n							<br/>\n							<b>Kernel : </b>\n							{{ hostInfo.KernelVersion }}\n							<br/>\n							<br/>\n							<b>IP : </b>\n							{{ hostUrl }}\n							<br/>\n              <br/>\n						</div>\n						<div class=\'col-xs-1\'>\n							<br/>\n						</div>\n						<div class=\'col-xs-3 well\'>\n							<b>Docker Daemon</b> version : <br/><br/>\n							<center><span class=\'label label-primary\' style=\'font-size: 16px;\'> {{ hostInfo.ServerVersion }} </span></center>\n							<br/>\n						</div>\n					</div>\n					<uib-tabset active="active">\n            <uib-tab index="0" heading="Containers" ng-click="activeContainer()">\n            <!-- Tabs 1 container info -->\n							<!-- Table -->\n							<table class="table table-striped no-margin-bottom">\n								<tr>\n									<th><input type="checkbox" ng-model="toggle" ng-change="toggleSelectAll()" style="margin-top: 35px;"/></th>\n									<th>\n										<button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'Names\')">\n		                  Names\n		                  <span class="sortorder" ng-show="predicate === \'Names\'" ng-class="{reverse:reverse}"></span>\n		                </button>\n		                <input class="form-control input-filter" ng-model="search.Names" placeholder="Filter...">\n	                </th>\n									<th>\n										<button class="btn-link btn-block btn-dropdown" ng-click="order(\'Id\')">\n		                  Container ID\n		                  <span class="sortorder" ng-show="predicate === \'Id\'" ng-class="{reverse:reverse}"></span>\n		                </button>\n		                <input class="form-control input-filter" ng-model="search.Id" placeholder="Filter...">\n									</th>\n									<th>\n										<button class="btn-link btn-block btn-dropdown" ng-click="order(\'Image\')">\n		                  Image\n		                  <span class="sortorder" ng-show="predicate === \'Image\'" ng-class="{reverse:reverse}"></span>\n		                </button>\n		                <input class="form-control input-filter" ng-model="search.Image" placeholder="Filter...">\n									</th>\n									<th>\n										<button class="btn-link btn-block btn-dropdown" ng-click="order(\'Status\')">\n		                  Container Status\n		                  <span class="sortorder" ng-show="predicate === \'Status\'" ng-class="{reverse:reverse}"></span>\n		                </button>\n		                <input class="form-control input-filter" ng-model="search.Status" placeholder="Filter...">\n									</th>\n									<th>Action</th>\n								</tr>\n								<tr ng-repeat="container in containers | filter:search:strict | orderBy:predicate:reverse">\n									<td><input type="checkbox" ng-model="container.Checked" /></td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										{{ container | containername }}\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										<a href="#/hosts/{{ hostInfo.Name }}/containers/{{ container.Id }}">\n										{{ container.Id|truncate:15 }}\n										</a>\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										{{ container.Image }}\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										<span class="label label-{{ container.Status|statusBadge }}" style="font-size: 95%">\n										{{ container.Status|statusControle }}\n										</span>\n									</td>\n									<td>\n										<a ng-controller="ContainersActionsController" href="#/hosts/{{ hostInfo.Name }}/" type="button" id="button_agent_action" ng-click="actionContainer(container.Id, container, container.Status)" class="btn btn-sm btn-default {{ container.Status|statusButtonActive }}" style="padding: 4px;" autocomplete="off">\n										<span class="label label-{{ container.Status|statusInverseBadge }} {{ container.Status|statusIconsStartStop }}" style="font-size: 100%;top: 1px;"> </span>\n										</a>\n									</td>\n								</tr>\n							</table>\n						</uib-tab>\n            <uib-tab index="1" heading="Images" ng-click="activeImage()">\n							<table class="table table-striped no-margin-bottom">\n								<tr>\n									<th></th>\n									<th>\n										<button type="button" class="btn-link btn-block btn-dropdown" ng-click="orderImage(\'RepoTags\')">\n											Tags\n											<span class="sortorder" ng-show="predicateImage === \'RepoTags\'" ng-class="{reverse:reverse}"></span>\n										</button>\n										<input class="form-control input-filter" ng-model="search.RepoTag" placeholder="Filter...">\n									</th>\n									<th>\n										<button type="button" class="btn-link btn-block btn-dropdown" ng-click="orderImage(\'Id\')">\n											Id\n											<span class="sortorder" ng-show="predicateImage === \'Id\'" ng-class="{reverse:reverse}"></span>\n										</button>\n										<input class="form-control input-filter" ng-model="search.Id" placeholder="Filter...">\n									</th>\n									<th>\n										<button type="button" class="btn-link btn-block btn-dropdown" ng-click="orderImage(\'Created\')">\n											Created\n											<span class="sortorder" ng-show="predicateImage === \'Created\'" ng-class="{reverse:reverse}"></span>\n										</button>\n										<input class="form-control input-filter" ng-model="search.Create" placeholder="Filter...">\n								</th>\n								<th>\n									<button type="button" class="btn-link btn-block btn-dropdown" ng-click="orderImage(\'VirtualSize\')">\n										VirtualSize\n										<span class="sortorder" ng-show="predicateImage === \'VirtualSize\'" ng-class="{reverse:reverse}"></span>\n									</button>\n								<input class="form-control input-filter" ng-model="search.VirtualSize" placeholder="Filter...">\n								</th>\n								<th>\n                  Containers\n                </th>\n								</tr>\n								<tr ng-repeat="image in images | filter:search:strict | orderBy:predicateImage:reverse">\n									<td>\n									  <div ng-if="!image.ContainerCreate">\n                      <input type="checkbox" ng-model="image.Checked" />\n                    </div>\n                  </td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										<a href="#/hosts/{{ hostInfo.Name }}/images/{{ image.Id }}">{{ image | repotag }}</a>\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										{{ image.Id | truncate:15  }}\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										{{ image.Created | getdate1000 }}\n									</td>\n									<td>\n										&nbsp;&nbsp;&nbsp;\n										{{ image.VirtualSize | humansize }}\n									</td>\n									<td>\n                    <a href="" style="text-decoration: none;" data-toggle="tooltip" data-placement="top" title="Container(s) created">\n                      <span class="label label-success" style="font-size: 95%;">{{ image.ContainerCreate }}</span>\n                    </a>\n                  </td>\n								</tr>\n							</table>\n						</uib-tab>\n					</div>\n				</div>\n			</div>\n		</div>\n	</div>\n</div>')}]),angular.module("app/components/hosts/hosts.html",[]).run(["$templateCache",function(a){a.put("app/components/hosts/hosts.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-include="template" ng-controller="WrapperHostsController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12" id="body-middle-container">\n        <h1 class="page-header">Hosts Docker</h1>\n        <div class="panel panel-default">\n          <div class="panel-heading">\n            <h3 class="panel-title">Hosts\'s List</h3>\n          </div>\n          <!-- Table -->\n          <table class="table table-striped">\n            <tr>\n              <th><input type="checkbox" ng-model="toggle" ng-change="toggleSelectAll()" style="margin-top: 35px;"/></th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'nodename\')">\n                  Hostname\n                  <span class="sortorder" ng-show="predicate === \'nodename\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.nodename" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'url\')">\n                  Url\n                  <span class="sortorder" ng-show="predicate === \'url\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.url" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'version\')">\n                  Docker version\n                  <span class="sortorder" ng-show="predicate === \'version\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.version" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'health\')">\n                  Status\n                  <span class="sortorder" ng-show="predicate === \'health\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.health" placeholder="Filter...">\n              </th>\n              <th>\n                <button type="button" class="btn-link btn-block btn-dropdown" ng-click="order(\'running\')">\n                  Containers Status\n                  <span class="sortorder" ng-show="predicate === \'running\'" ng-class="{reverse:reverse}"></span>\n                </button>\n                <input class="form-control input-filter" ng-model="search.running" placeholder="Filter...">\n              </th>\n            </tr>\n            <tr ng-repeat="swarm in swarms | filter:search:strict | orderBy:predicate:reverse">\n              <td><input type="checkbox" ng-model="swarm.Checked" /></td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <a href="/#/hosts/{{ swarm.nodename }}/">{{ swarm.nodename }}</a>\n              </td>\n              <td>&nbsp;&nbsp;&nbsp;\n                {{ swarm.url }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                {{ swarm.version }}\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <span class="label label-{{ swarm.health|statusbadgeNode }}" style="font-size: 95%">{{ swarm.health }}</span>\n              </td>\n              <td>\n                &nbsp;&nbsp;&nbsp;\n                <a href="" style="text-decoration: none;" data-toggle="tooltip" data-placement="top" title="Container(s) running">\n                  <span class="label label-success" style="font-size: 95%;">{{ swarm.running }}</span>\n                </a>\n                <a href="" style="text-decoration: none;" data-toggle="tooltip" data-placement="top" title="Container(s) stopped">\n                  <span class="label label-warning" style="font-size: 95%;">{{ swarm.stopped }}</span>\n                </a>\n                <a href="" style="text-decoration: none;" data-toggle="tooltip" data-placement="top" title="Container(s) created">\n                  <span class="label label-default" style="font-size: 95%;">{{ swarm.created }}</span>\n                </a>\n              </td>\n            </tr>\n          </table>\n        </div>\n        <!-- Middle Container --> \n      </div>\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>')}]),angular.module("app/components/image/image.html",[]).run(["$templateCache",function(a){a.put("app/components/image/image.html",'<div id="wrapper">     \n  <!-- Include Sidebar -->\n  <div ng-if="dashOn" ng-include="template" ng-controller="WrapperDashboardController"></div>\n  <div ng-if="hostOn" ng-include="template" ng-controller="WrapperHostsController"></div>\n  <!-- Main component for a primary marketing message or call to action -->\n  <div class="container-fluid">\n    <div class="row">\n      <!-- Middle Container -->\n      <div class="col-xs-12">\n        <h1 class="page-header">Image information</h1>\n        <div class="panel panel-default">\n          <div class="panel-heading">\n            <h3 class="panel-title">\n              <span class="col-xs-11" style="margin-top: 5px; font-size: 18px;">{{ RepoTags[0] }}</span>\n              <div class="btn-group">\n                <button type="button" class="btn btn-default dropdown-toggle" style="margin: 0;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n                  Action <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu">\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="image.addTags = true;">Add Tags\n                    </button>\n                  </li>\n                  <li role="separator" class="divider"></li>\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      data-toggle="modal" data-target="#create-modal">Create Container\n                    </button>\n                  </li>\n                  <li>\n                    <button type="button" class="btn-link btn-block btn-dropdown"\n                      ng-click="removeImage(id)"\n                      ng-show="!containerchart">Remove image\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </h3>\n          </div>\n          <div class="panel-body">\n            <a href="/#{{ from }}"><- Return {{ returnTo }}</a><br/><br/>\n            <div class=\'col-xs-9 well\'>\n              <h4>Global</h4>\n              <b>Id : </b>{{ image.Id }}\n              <br/>\n              <b>Created : </b>{{ image.Created | date: \'medium\' }}\n              <br/>\n              <br/>\n              <div ng-if="containerchart">\n                <h4>Containers created:</h4>\n                <canvas id="containers-started-chart" class="linecharte-image">\n                    <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a\n                            href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n                </canvas>\n              </div>\n            </div>\n            <div class=\'col-xs-3\'>\n              <br/>\n            </div>\n            <div ng-include="template" ng-controller="StartContainerController"></div>\n            <div class="col-xs-12" ng-if="image.addTags">\n              <form class="form-inline" role="form">\n                <fieldset>\n                  <legend>Tag image</legend>\n                  <div class="form-group">\n                    <label>Tag:</label>\n                    <input type="text" placeholder="repo" ng-model="tagInfo.repo" class="form-control">\n                    <input type="text" placeholder="version" ng-model="tagInfo.version" class="form-control">\n                  </div>\n                  <div class="form-group">\n                    <label class="checkbox">\n                      <input type="checkbox" ng-model="tagInfo.force" class="form-control"/> Force?\n                    </label>\n                  </div>\n                  <input type="button" ng-click="addTag()" value="Add Tag" class="btn btn-primary"/>\n                  <button class="btn btn-danger" ng-click="image.addTags = false;">&times;</button>\n                </fieldset>\n              </form>\n              <hr/>\n            </div>\n          </div>\n          \n          <table class="table table-striped">\n              <tbody>\n              <tr>\n                <td class="col-xs-2">Tags:</td>\n                <td class="col-xs10">\n                  <ul class="deco-none">\n                    <li ng-repeat="tag in RepoTags">\n                      <div class="col-xs-12" style="margin: 5px">\n                        <div class="col-xs-1"style="margin-right: 20px;">\n                          <button ng-click="removeImage(tag)" class="btn btn-sm btn-danger">Remove tag</button>\n                        </div>\n                        <div class="col-xs-10" style="margin-top: 5px;">\n                          {{ tag }}\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n              <tr>\n                  <td>Parent:</td>\n                  <td><a href="#{{ toParent }}{{ image.Parent }}/">{{ image.Parent }}</a></td>\n              </tr>\n              <tr>\n                  <td>Size (Virtual Size):</td>\n                  <td>{{ image.Size|humansize }} ({{ image.VirtualSize|humansize }})</td>\n              </tr>\n\n              <tr>\n                  <td>Hostname:</td>\n                  <td>{{ image.ContainerConfig.Hostname }}</td>\n              </tr>\n              <tr>\n                  <td>User:</td>\n                  <td>{{ image.ContainerConfig.User }}</td>\n              </tr>\n              <tr>\n                  <td>Cmd:</td>\n                  <td>\n                    <div class="well well-large no-margin-bottom">\n                      <ul class="deco-none">\n                        <li>{{ image.ContainerConfig.Cmd }}</li>\n                      </ul>\n                    </div>\n                  </td>\n              </tr>\n              <tr>\n                  <td>Volumes:</td>\n                  <td>\n                    {{ image.ContainerConfig.Volumes }}</td>\n              </tr>\n              <tr>\n                  <td>Volumes from:</td>\n                  <td>\n                    {{ image.ContainerConfig.VolumesFrom }}\n                  </td>\n              </tr>\n              <tr>\n                  <td>Built with:</td>\n                  <td>\n                    <div class="well well-large no-margin-bottom">\n                      <ul class="deco-none">\n                        <li>Docker {{ image.DockerVersion }} on {{ image.Os}}, {{ image.Architecture }}</li>\n                      </ul>\n                    </div>\n                  </td>\n              </tr>\n              <tr>\n                <td>History:</td>\n                <td>\n                  <div class="well well-large no-margin-bottom">\n                    <ul class="deco-none">\n                      <li ng-repeat="change in history | filter:hasContent">\n                        <strong>{{ change.Id }}</strong>: Created: {{ change.Created|getdate1000 }} Created by: {{ change.CreatedBy }}\n                      </li>\n                    </ul>\n                  </div>\n                </td>\n              </tr>\n              </tbody>\n          </table>          \n        </div>\n        <!-- Middle Container -->   \n      </div>\n    </div>\n  </div>\n  <!-- Main component for a primary marketing message or call to action -->\n</div>');
}]),angular.module("app/components/masthead/masthead.html",[]).run(["$templateCache",function(a){a.put("app/components/masthead/masthead.html",'<nav class="navbar navbar-inverse navbar-fixed-top">\n  <div class="container-fluid">\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">\n        <span class="sr-only">Toggle navigation</span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="#/">\n        <span><img style="margin-top: -14px;" src="ico/swarmui.png">SwarmUI</span>\n      </a>\n    </div>\n    <div id="navbar" class="navbar-collapse collapse">\n      <ul class="nav navbar-nav navbar-right">\n        <li ng-if="dashOn" id="navbar_0001" class="active">\n          <a ng-click="updateMasthead(1)" href="#/">Dashboards</a>\n        </li>\n        <li ng-if="!dashOn" id="navbar_0001">\n          <a ng-click="updateMasthead(1)" href="#/">Dashboards</a>\n        </li>\n        <li ng-if="hostOn" id="navbar_0002" class="active">\n          <a ng-click="updateMasthead(2)" href="#/hosts/">Hosts</a>\n        </li>\n        <li ng-if="!hostOn" id="navbar_0002">\n          <a ng-click="updateMasthead(2)" href="#/hosts/">Hosts</a>\n        </li>\n        <li id="navbar_0003" ng-if="showAdmin">\n          <a ng-click="updateMasthead(3)" href="#/admin/">Admin</a>\n        </li>\n        <li id="navbar_0004" ng-if="showLogout">\n          <a ng-click="updateMasthead(3)" href="#/logout/">\n            <span class="glyphicon glyphicon-off" style="font-size: 14px;"></span>\n          </a>\n        </li>\n        <li id="navbar_0004">\n          <button type="button" class="btn-link"  ng-click="open()"\n            data-toggle="modal" data-target="#about-modal" style="margin-top: 11px;">\n              <span class="glyphicon glyphicon-info-sign" style="font-size: 18px;"></span>\n          </button>\n        </li>      \n        <li>\n          <button class="btn btn-primary" style="margin-top:8px; margin-right:10px;" ng-click="refresh()">\n            <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>\n            Refresh\n          </button>\n        </li>\n      </ul>\n    </div>\n    <!--/.nav-collapse -->\n  </div>\n</nav>')}]),angular.module("app/components/pullImage/pullImage.html",[]).run(["$templateCache",function(a){a.put("app/components/pullImage/pullImage.html",'<div id="pull-modal" class="modal fade">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h3>Pull Image</h3>\n      </div>\n      <div class="modal-body">\n        <form role="form" name="pullForm">\n          <div ng-if="!fromNode" class="form-group">\n            <label>Select host:</label>\n            <select class="form-control" ng-model="config.node" ng-change="selectedNode()">\n              <option ng-repeat="Node in Nodes" value="{{ Node | nodeurl }}">\n                {{ Node | nodename }}\n              </option>\n            </select>\n          </div>\n          <div ng-if="fromNode" class="input-group">\n            <input type="text" ng-model="config.searchImage" class="form-control" \n            placeholder="Search image..." />\n            <span class="input-group-btn">\n              <button ng-click="searchDockerCont()" class="btn btn-default glyphicon glyphicon-search" style="top: 0;" type="button"></button>\n            </span>\n          </div>\n          <div ng-if="nodeSelected" class="input-group">\n            <input type="text" ng-model="config.searchImage" class="form-control" \n            placeholder="Search image..." />\n            <span class="input-group-btn">\n              <button ng-click="searchDockerCont()" class="btn btn-default glyphicon glyphicon-search" style="top: 0;" type="button"></button>\n            </span>\n          </div>\n          <br/>\n          <div ng-if="searchResult">\n            <div class="form-group">\n              <label>Select Image:</label>\n              <select class="form-control" ng-change="getRepositoriesTags()" ng-model="config.image">\n                <option ng-repeat="image in ImagesResult" value="{{ image }}">\n                  {{ image }}\n                </option>\n              </select>\n            </div>\n            <div ng-if="searchTagResult">\n              <div class="form-group">\n                <label>Select Tag:</label>\n                <select class="form-control" ng-model="config.tag" ng-change="selectedTags()">\n                  <option ng-repeat="tag in TagsResult" value="{{ tag.name }}">\n                    {{ tag.name }} - {{ tag.last_updated | getdate }}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class="alert alert-error" id="error-message" style="display:none">\n        {{ error }}\n      </div>\n      <div ng-if="searchTagSelected" class="modal-footer">\n        <a href="" class="btn btn-primary" ng-click="pull()">Pull</a>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("app/components/startContainer/startcontainer.html",[]).run(["$templateCache",function(a){a.put("app/components/startContainer/startcontainer.html",'<div id="create-modal" class="modal fade">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n        <h3>Create Container</h3>\n      </div>\n      <div class="modal-body">\n        <form role="form">\n          <uib-accordion close-others="true">\n            <uib-accordion-group heading="Container options" is-open="menuStatus.containerOpen">\n                <fieldset>\n                    <div class="row">\n                        <div class="col-xs-12">\n                          <div ng-if="!RepoTags" class="form-group">\n                            <label>Image Tag version:</label>\n                            <select class="form-control" ng-model="config.Image">\n                              <option ng-repeat="Tag in images" value="{{ Tag | repotag }}">\n                                {{ Tag | repotag }}\n                              </option>\n                            </select>\n                          </div>\n                          <div ng-if="RepoTags" class="form-group">\n                            <label>Image Tag version:</label>\n                            <select class="form-control" ng-model="config.Image">\n                              <option ng-repeat="Tag in RepoTags" value="{{ Tag }}">\n                                {{ Tag }}\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class="col-xs-12">\n                          <div ng-if="!hostOn" class="form-group">\n                            <label>Server host:</label>\n                            <select class="form-control" ng-model="selected.Host">\n                              <option ng-repeat="Node in Nodes" value="{{ Node | nodename }}">\n                                {{ Node | nodename }}\n                              </option>\n                            </select>\n                          </div>\n                          <div ng-if="hostOn" class="form-group">\n                            <label>Server host:</label>\n                            <select class="form-control" ng-model="selected.Host">\n                              <option value="{{ node }}">\n                                {{ node }}\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class="col-xs-6">\n                            <div class="form-group">\n                                <label>Cmd:</label>\n                                <input type="text" placeholder=\'["/bin/echo", "Hello world"]\'\n                                       ng-model="config.Cmd" class="form-control"/>\n                                <small>Input commands as a raw string or JSON array</small>\n                            </div>\n                            <div class="form-group">\n                                <label>Entrypoint:</label>\n                                <input type="text" ng-model="config.Entrypoint" class="form-control"\n                                       placeholder="./entrypoint.sh"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Name:</label>\n                                <input type="text" ng-model="config.name" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Hostname:</label>\n                                <input type="text" ng-model="config.Hostname" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Domainname:</label>\n                                <input type="text" ng-model="config.Domainname" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>User:</label>\n                                <input type="text" ng-model="config.User" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Memory:</label>\n                                <input type="number" ng-model="config.Memory" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Volumes:</label>\n\n                                <div ng-repeat="volume in config.Volumes">\n                                    <div class="form-group form-inline">\n                                        <input type="text" ng-model="volume.name" class="form-control"\n                                               placeholder="/var/data"/>\n                                        <button type="button" class="btn btn-danger btn-sm"\n                                                ng-click="rmEntry(config.Volumes, volume)">Remove\n                                        </button>\n                                    </div>\n                                </div>\n                                <button type="button" class="btn btn-success btn-sm"\n                                        ng-click="addEntry(config.Volumes, {name: \'\'})">Add Volume\n                                </button>\n                            </div>\n                        </div>\n                        <div class="col-xs-6">\n                            <div class="form-group">\n                                <label>MemorySwap:</label>\n                                <input type="number" ng-model="config.MemorySwap" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>CpuShares:</label>\n                                <input type="number" ng-model="config.CpuShares" class="form-control"/>\n                            </div>\n                            <div class="form-group">\n                                <label>Cpuset:</label>\n                                <input type="text" ng-model="config.Cpuset" class="form-control"\n                                       placeholder="1,2"/>\n                                <small>Input as comma-separated list of numbers</small>\n                            </div>\n                            <div class="form-group">\n                                <label>WorkingDir:</label>\n                                <input type="text" ng-model="config.WorkingDir" class="form-control"\n                                       placeholder="/app"/>\n                            </div>\n                            <div class="form-group">\n                                <label>MacAddress:</label>\n                                <input type="text" ng-model="config.MacAddress" class="form-control"\n                                       placeholder="12:34:56:78:9a:bc"/>\n                            </div>\n                            <div class="form-group">\n                                <label for="networkDisabled">NetworkDisabled:</label>\n                                <input id="networkDisabled" type="checkbox"\n                                       ng-model="config.NetworkDisabled"/>\n                            </div>\n                            <div class="form-group">\n                                <label for="tty">Tty:</label>\n                                <input id="tty" type="checkbox" ng-model="config.Tty"/>\n                            </div>\n                            <div class="form-group">\n                                <label for="openStdin">OpenStdin:</label>\n                                <input id="openStdin" type="checkbox" ng-model="config.OpenStdin"/>\n                            </div>\n                            <div class="form-group">\n                                <label for="stdinOnce">StdinOnce:</label>\n                                <input id="stdinOnce" type="checkbox" ng-model="config.StdinOnce"/>\n                            </div>\n                            <div class="form-group">\n                                <label>SecurityOpts:</label>\n\n                                <div ng-repeat="opt in config.SecurityOpts">\n                                    <div class="form-group form-inline">\n                                        <input type="text" ng-model="opt.name" class="form-control"\n                                               placeholder="label:type:svirt_apache"/>\n                                        <button type="button" class="btn btn-danger btn-sm"\n                                                ng-click="rmEntry(config.SecurityOpts, opt)">Remove\n                                        </button>\n                                    </div>\n                                </div>\n                                <button type="button" class="btn btn-success btn-sm"\n                                        ng-click="addEntry(config.SecurityOpts, {name: \'\'})">Add Option\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class="form-group">\n                        <label>Env:</label>\n\n                        <div ng-repeat="envar in config.Env">\n                            <div ng-if="envar.name != \'constraint:node=\'" class="form-group form-inline">\n                                <div class="form-group">\n                                    <label class="sr-only">Variable Name:</label>\n                                    <input type="text" ng-model="envar.name" class="form-control"\n                                           placeholder="NAME"/>\n                                </div>\n                                <div class="form-group">\n                                    <label class="sr-only">Variable Value:</label>\n                                    <input type="text" ng-model="envar.value" class="form-control"\n                                           placeholder="value"/>\n                                </div>\n                                <div class="form-group">\n                                    <button class="btn btn-danger btn-xs form-control"\n                                            ng-click="rmEntry(config.Env, envar)">Remove\n                                    </button>\n                                </div>\n                            </div>\n                            <div ng-if="envar.name == \'constraint:node=\'">\n                              <div ng-init="rmEntry(config.Env, envar)"></div>\n                            </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                                ng-click="addEntry(config.Env, {name: \'\', value: \'\'})">Add environment\n                            variable\n                        </button>\n                    </div>\n                    <div class="form-group">\n                        <label>Labels:</label>\n\n                        <div ng-repeat="label in config.Labels">\n                            <div class="form-group form-inline">\n                                <div class="form-group">\n                                    <label class="sr-only">Key:</label>\n                                    <input type="text" ng-model="label.key" class="form-control"\n                                           placeholder="key"/>\n                                </div>\n                                <div class="form-group">\n                                    <label class="sr-only">Value:</label>\n                                    <input type="text" ng-model="label.value" class="form-control"\n                                           placeholder="value"/>\n                                </div>\n                                <div class="form-group">\n                                    <button class="btn btn-danger btn-xs form-control"\n                                            ng-click="rmEntry(config.Labels, label)">Remove\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                                ng-click="addEntry(config.Labels, {key: \'\', value: \'\'})">Add Label\n                        </button>\n                    </div>\n                </fieldset>\n            </uib-accordion-group>\n            <uib-accordion-group heading="HostConfig options" is-open="menuStatus.hostConfigOpen">\n              <fieldset>\n                <div class="row">\n                    <div class="col-xs-6">\n                      <div class="form-group">\n                        <label>Binds:</label>\n\n                        <div ng-repeat="bind in config.HostConfig.Binds">\n                          <div class="form-group form-inline">\n                            <input type="text" ng-model="bind.name" class="form-control"\n                              placeholder="/host:/container"/>\n                            <button type="button" class="btn btn-danger btn-sm"\n                              ng-click="rmEntry(config.HostConfig.Binds, bind)">Remove\n                            </button>\n                          </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                          ng-click="addEntry(config.HostConfig.Binds, {name: \'\'})">Add Bind\n                        </button>\n                      </div>\n                      <div class="form-group">\n                        <label>Links:</label>\n\n                        <div ng-repeat="link in config.HostConfig.Links">\n                          <div class="form-group form-inline">\n                            <input type="text" ng-model="link.name" class="form-control"\n                              placeholder="web:db">\n                            <button type="button" class="btn btn-danger btn-sm"\n                              ng-click="rmEntry(config.HostConfig.Links, link)">Remove\n                            </button>\n                          </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                                ng-click="addEntry(config.HostConfig.Links, {name: \'\'})">Add Link\n                        </button>\n                      </div>\n                      <div class="form-group">\n                        <label>Dns:</label>\n\n                        <div ng-repeat="entry in config.HostConfig.Dns">\n                          <div class="form-group form-inline">\n                            <input type="text" ng-model="entry.name" class="form-control"\n                              placeholder="8.8.8.8"/>\n                            <button type="button" class="btn btn-danger btn-sm"\n                              ng-click="rmEntry(config.HostConfig.Dns, entry)">Remove\n                            </button>\n                          </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                                ng-click="addEntry(config.HostConfig.Dns, {name: \'\'})">Add entry\n                        </button>\n                      </div>\n                      <div class="form-group">\n                        <label>DnsSearch:</label>\n\n                        <div ng-repeat="entry in config.HostConfig.DnsSearch">\n                          <div class="form-group form-inline">\n                            <input type="text" ng-model="entry.name" class="form-control"\n                              placeholder="example.com"/>\n                            <button type="button" class="btn btn-danger btn-sm"\n                              ng-click="rmEntry(config.HostConfig.DnsSearch, entry)">\n                                Remove\n                            </button>\n                          </div>\n                        </div>\n                        <button type="button" class="btn btn-success btn-sm"\n                          ng-click="addEntry(config.HostConfig.DnsSearch, {name: \'\'})">Add\n                            entry\n                        </button>\n                      </div>\n                      <div class="form-group">\n                          <label>CapAdd:</label>\n\n                          <div ng-repeat="entry in config.HostConfig.CapAdd">\n                              <div class="form-group form-inline">\n                                  <input type="text" ng-model="entry.name" class="form-control"\n                                         placeholder="cap_sys_admin"/>\n                                  <button type="button" class="btn btn-danger btn-sm"\n                                          ng-click="rmEntry(config.HostConfig.CapAdd, entry)">Remove\n                                  </button>\n                              </div>\n                          </div>\n                          <button type="button" class="btn btn-success btn-sm"\n                                  ng-click="addEntry(config.HostConfig.CapAdd, {name: \'\'})">Add entry\n                          </button>\n                      </div>\n                      <div class="form-group">\n                          <label>CapDrop:</label>\n\n                          <div ng-repeat="entry in config.HostConfig.CapDrop">\n                              <div class="form-group form-inline">\n                                  <input type="text" ng-model="entry.name" class="form-control"\n                                         placeholder="cap_sys_admin"/>\n                                  <button type="button" class="btn btn-danger btn-sm"\n                                          ng-click="rmEntry(config.HostConfig.CapDrop, entry)">Remove\n                                  </button>\n                              </div>\n                          </div>\n                          <button type="button" class="btn btn-success btn-sm"\n                                  ng-click="addEntry(config.HostConfig.CapDrop, {name: \'\'})">Add entry\n                          </button>\n                      </div>\n                    </div>\n                    <div class="col-xs-6">\n                      <div class="form-group">\n                          <label>NetworkMode:</label>\n                          <input type="text" ng-model="config.HostConfig.NetworkMode"\n                                 class="form-control" placeholder="bridge"/>\n                      </div>\n                      <div class="form-group">\n                          <label for="publishAllPorts">PublishAllPorts:</label>\n                          <input id="publishAllPorts" type="checkbox"\n                                 ng-model="config.HostConfig.PublishAllPorts"/>\n                      </div>\n                      <div class="form-group">\n                          <label for="privileged">Privileged:</label>\n                          <input id="privileged" type="checkbox"\n                                 ng-model="config.HostConfig.Privileged"/>\n                      </div>\n                      <div class="form-group">\n                          <label>VolumesFrom:</label>\n\n                          <div ng-repeat="volume in config.HostConfig.VolumesFrom">\n                              <div class="form-group form-inline">\n                                  <select ng-model="volume.name" class="form-control">\n                                    <option ng-repeat="name in containers" value="{{ name | containername }}">\n                                      {{ name | containername }}\n                                    </option>   \n                                  </select>\n                                  <button class="btn btn-danger btn-xs form-control"\n                                          ng-click="rmEntry(config.HostConfig.VolumesFrom, volume)">\n                                      Remove\n                                  </button>\n                              </div>\n                          </div>\n                          <button type="button" class="btn btn-success btn-sm"\n                                  ng-click="addEntry(config.HostConfig.VolumesFrom, {name: \'\'})">Add\n                              volume\n                          </button>\n                      </div>\n\n                      <div class="form-group">\n                          <label>RestartPolicy:</label>\n                          <select ng-model="config.HostConfig.RestartPolicy.name">\n                              <option value="">disabled</option>\n                              <option value="always">always</option>\n                              <option value="on-failure">on-failure</option>\n                          </select>\n                          <label>MaximumRetryCount:</label>\n                          <input type="number"\n                                 ng-model="config.HostConfig.RestartPolicy.MaximumRetryCount"/>\n                      </div>\n                    </div>\n                </div>\n                <hr>\n                <div class="form-group">\n                    <label>ExtraHosts:</label>\n\n                    <div ng-repeat="entry in config.HostConfig.ExtraHosts">\n                        <div class="form-group form-inline">\n                            <div class="form-group">\n                                <label class="sr-only">Hostname:</label>\n                                <input type="text" ng-model="entry.host" class="form-control"\n                                       placeholder="hostname"/>\n                            </div>\n                            <div class="form-group">\n                                <label class="sr-only">IP Address:</label>\n                                <input type="text" ng-model="entry.ip" class="form-control"\n                                       placeholder="127.0.0.1"/>\n                            </div>\n                            <div class="form-group">\n                                <button class="btn btn-danger btn-xs form-control"\n                                        ng-click="rmEntry(config.HostConfig.ExtraHosts, entry)">Remove\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <button type="button" class="btn btn-success btn-sm"\n                            ng-click="addEntry(config.HostConfig.ExtraHosts, {host: \'\', ip: \'\'})">Add\n                        extra host\n                    </button>\n                </div>\n                <div class="form-group">\n                    <label>LxcConf:</label>\n\n                    <div ng-repeat="entry in config.HostConfig.LxcConf">\n                        <div class="form-group form-inline">\n                            <div class="form-group">\n                                <label class="sr-only">Name:</label>\n                                <input type="text" ng-model="entry.name" class="form-control"\n                                       placeholder="lxc.utsname"/>\n                            </div>\n                            <div class="form-group">\n                                <label class="sr-only">Value:</label>\n                                <input type="text" ng-model="entry.value" class="form-control"\n                                       placeholder="docker"/>\n                            </div>\n                            <div class="form-group">\n                                <button class="btn btn-danger btn-xs form-control"\n                                        ng-click="rmEntry(config.HostConfig.LxcConf, entry)">Remove\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <button type="button" class="btn btn-success btn-sm"\n                            ng-click="addEntry(config.HostConfig.LxcConf, {name: \'\', value: \'\'})">Add\n                        Entry\n                    </button>\n                </div>\n                <div class="form-group">\n                    <label>Devices:</label>\n\n                    <div ng-repeat="device in config.HostConfig.Devices">\n                        <div class="form-group form-inline inline-four">\n                            <label class="sr-only">PathOnHost:</label>\n                            <input type="text" ng-model="device.PathOnHost" class="form-control"\n                                   placeholder="PathOnHost"/>\n                            <label class="sr-only">PathInContainer:</label>\n                            <input type="text" ng-model="device.PathInContainer" class="form-control"\n                                   placeholder="PathInContainer"/>\n                            <label class="sr-only">CgroupPermissions:</label>\n                            <input type="text" ng-model="device.CgroupPermissions" class="form-control"\n                                   placeholder="CgroupPermissions"/>\n                            <button class="btn btn-danger btn-xs form-control"\n                                    ng-click="rmEntry(config.HostConfig.Devices, device)">Remove\n                            </button>\n                        </div>\n                    </div>\n                    <button type="button" class="btn btn-success btn-sm"\n                            ng-click="addEntry(config.HostConfig.Devices, { PathOnHost: \'\', PathInContainer: \'\', CgroupPermissions: \'\'})">\n                        Add Device\n                    </button>\n                </div>\n                <div class="form-group">\n                    <label>PortBindings:</label>\n\n                    <div ng-repeat="portBinding in config.HostConfig.PortBindings">\n                        <div class="form-group form-inline inline-four">\n                            <label class="sr-only">Host IP:</label>\n                            <input type="text" ng-model="portBinding.ip" class="form-control"\n                                   placeholder="Host IP Address"/>\n                            <label class="sr-only">Host Port:</label>\n                            <input type="text" ng-model="portBinding.extPort" class="form-control"\n                                   placeholder="Host Port"/>\n                            <label class="sr-only">Container port:</label>\n                            <input type="text" ng-model="portBinding.intPort" class="form-control"\n                                   placeholder="Container Port"/>\n                            <select ng-model="portBinding.protocol">\n                                <option value="">tcp</option>\n                                <option value="udp">udp</option>\n                            </select>\n                            <button class="btn btn-danger btn-xs form-control"\n                                    ng-click="rmEntry(config.HostConfig.PortBindings, portBinding)">\n                                Remove\n                            </button>\n                        </div>\n                    </div>\n                    <button type="button" class="btn btn-success btn-sm"\n                            ng-click="addEntry(config.HostConfig.PortBindings, {ip: \'\', extPort: \'\', intPort: \'\'})">\n                        Add Port Binding\n                    </button>\n                </div>\n              </fieldset>\n            </uib-accordion-group>\n          </uib-accordion>\n        </form>\n      </div>\n      <div class="modal-footer">\n        <a href="" class="btn btn-primary btn-lg" ng-click="addNodeEntry(config.Env); create()">Create</a>\n      </div>\n    </div>\n  </div>\n</div>\n');
}]),angular.module("app/components/wrapperDashboard/wrapperDashboard.html",[]).run(["$templateCache",function(a){a.put("app/components/wrapperDashboard/wrapperDashboard.html",'<!-- Sidebar -->\n<div id="sidebar-wrapper">\n  <ul id="sidebar_menu" class="sidebar-nav">\n    <li class="sidebar-brand">\n      <a id="menu-toggle" href="" ng-click="wrapperDash()">\n        <span id="main_icon" class="glyphicon glyphicon-align-justify">\n        </span>\n      </a>\n    </li>\n  </ul>\n  <ul class="sidebar-nav" id="sidebar">     \n    <li id="wrapper-dash_0001">\n      <a href="/#/" id="dash_elem_0001" data-toggle="tooltip" data-placement="right" title="Dashboard">\n        Dashboard\n        <div id="wrapper-dash">\n          <span id="main_icon_dash" class="glyphicon glyphicon-dashboard"></span>\n        </div>\n      </a>\n    </li>\n    <li id="wrapper-dash_0002">\n      <a href="/#/dashboard/images/" id="dash_elem_0002" data-toggle="tooltip" data-placement="right" title="Images Docker">\n        Images\n        <div id="wrapper-agents">\n          <span id=\'main_icon_dash\' class=\'glyphicon glyphicon-picture\'>\n            <span class=\'wrapper-badge wrapper-badge-danger\'></span>\n          </span>\n        </div>\n      </a>\n    </li>\n    <li id="wrapper-dash_0003">\n      <a href="/#/dashboard/containers/" id="dash_elem_0003" data-toggle="tooltip" data-placement="right" title="Containers Docker">\n        Containers\n        <div id="wrapper-instances">\n'+"          <span id='main_icon_dash' class='glyphicon glyphicon-oil'>\n            <span class='wrapper-badge wrapper-badge-danger'></span>\n          </span>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>\n")}]),angular.module("app/components/wrapperHosts/wrapperHosts.html",[]).run(["$templateCache",function(a){a.put("app/components/wrapperHosts/wrapperHosts.html",'<!-- Sidebar -->\n<div id="sidebar-wrapper">\n  <ul id="sidebar_menu" class="sidebar-nav">\n    <li class="sidebar-brand">\n      <a id="menu-toggle" href="" ng-click="wrapperDash()">\n        <span id="main_icon" class="glyphicon glyphicon-align-justify">\n        </span>\n      </a>\n    </li>\n  </ul>\n  <ul class="sidebar-nav" id="sidebar">     \n    <li id="wrapper-hosts_0001" class="active">\n      <a href="/#/hosts/" id="hosts_elem_0001" data-toggle="tooltip" data-placement="right" title="Hosts">\n        Hosts\n        <div id="wrapper-agents">\n'+"          <span id='main_icon_dash' class='glyphicon glyphicon-list-alt'>\n            <span class='wrapper-badge wrapper-badge-danger'></span>\n          </span>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>")}]);